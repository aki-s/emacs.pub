<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="jp"
 lang="jp" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>jp:c:other:va_arg</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:21-0700" />
<meta name="keywords" content="jp,c,other,va_arg" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/jp/c/other/va_arg?do=index" title="Sitemap" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=jp:c:other" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/jp/c/other/va_arg" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/jp/c/other/va_arg" />
<link rel="canonical" href="va_arg" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='jp:c:other';var JSINFO = {"id":"jp:c:other:va_arg","namespace":"jp:c:other"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="va_arg" id="va_arg">va_arg</a></h2>
<div class="level2">

<p>

文法:

</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;cstdarg&gt;</span>
    type <span class="kw3">va_arg</span><span class="br0">&#40;</span> <span class="kw4">va_list</span> 引数ポインタ, タイプ <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">void</span> <span class="kw3">va_end</span><span class="br0">&#40;</span> <span class="kw4">va_list</span> 引数ポインタ <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">void</span> <span class="kw3">va_start</span><span class="br0">&#40;</span> <span class="kw4">va_list</span> 引数ポインタ, 最後のパラメータ <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
va_arg()マクロは、関数に可変個数の引数を渡すのに使用します。

</p>
<ol>
<li class="level1"><div class="li"> まず最初に、va_start()を呼び出し、va_listと、 関数の可変長引数を表す&#039;…&#039;引数の直前の、必須引数をわたします。もしも必須の引数が一つしかない場合には、これを渡します。そのため、少なくとも一つの必須の引数を宣言する必要があります。この引数はどんなものでも構いませんが、可変長引数の個数を表す整数値を渡すのも一つの方法です。</div>
</li>
<li class="level1"><div class="li"> 次にva_listと、引数の型を指定してva_arg()を呼び出します。va_arg()の返り値は、現在の位置のパラメータになります。</div>
</li>
<li class="level1"><div class="li"> 引数が存在する数だけva_arg()を繰り返し呼び出します。</div>
</li>
<li class="level1"><div class="li"> 最後に、va_listを渡してva_end()を呼び出し、必要な終了処理を行います。</div>
</li>
</ol>

<p>

サンプル:
</p>
<pre class="cpp code cpp">    <span class="kw4">int</span> sum<span class="br0">&#40;</span> <span class="kw4">int</span> num, ... <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      <span class="kw4">int</span> answer <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
      <span class="kw4">va_list</span> argptr<span class="sy4">;</span>
&nbsp;
      <span class="kw3">va_start</span><span class="br0">&#40;</span> argptr, num <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
      <span class="kw1">for</span><span class="br0">&#40;</span> <span class="sy4">;</span> num <span class="sy1">&gt;</span> <span class="nu0">0</span><span class="sy4">;</span> num<span class="sy2">--</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
        answer <span class="sy2">+</span><span class="sy1">=</span> <span class="kw3">va_arg</span><span class="br0">&#40;</span> argptr, <span class="kw4">int</span> <span class="br0">&#41;</span><span class="sy4">;</span>
      <span class="br0">&#125;</span>
&nbsp;
      <span class="kw3">va_end</span><span class="br0">&#40;</span> argptr <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
      <span class="kw1">return</span><span class="br0">&#40;</span> answer <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="br0">&#125;</span>
&nbsp;
    <span class="kw4">int</span> main<span class="br0">&#40;</span> <span class="kw4">void</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
      <span class="kw4">int</span> answer <span class="sy1">=</span> sum<span class="br0">&#40;</span> <span class="nu0">4</span>, <span class="nu0">4</span>, <span class="nu0">3</span>, <span class="nu0">2</span>, <span class="nu0">1</span> <span class="br0">&#41;</span><span class="sy4">;</span>
      <span class="kw3">printf</span><span class="br0">&#40;</span> <span class="st0">&quot;答えは %d<span class="es1">\n</span>&quot;</span>, answer <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
      <span class="kw1">return</span><span class="br0">&#40;</span> <span class="nu0">0</span> <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="br0">&#125;</span></pre>
<p>
このコードを実行すると、10(4+3+2+1)が返されます。
</p>

<p>
以下のコードは、画面出力のためのサンプルになります:

</p>
<pre class="cpp code cpp">   <span class="kw4">void</span> my_printf<span class="br0">&#40;</span> <span class="kw4">char</span> <span class="sy2">*</span>format, ... <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw4">va_list</span> argptr<span class="sy4">;</span>
&nbsp;
     <span class="kw3">va_start</span><span class="br0">&#40;</span> argptr, format <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
     <span class="kw1">while</span><span class="br0">&#40;</span> <span class="sy2">*</span>format <span class="sy3">!</span><span class="sy1">=</span> <span class="st0">'<span class="es5">\0</span>'</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
       <span class="co1">// string</span>
       <span class="kw1">if</span><span class="br0">&#40;</span> <span class="sy2">*</span>format <span class="sy1">==</span> <span class="st0">'s'</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
         <span class="kw4">char</span><span class="sy2">*</span> s <span class="sy1">=</span> <span class="kw3">va_arg</span><span class="br0">&#40;</span> argptr, <span class="kw4">char</span> <span class="sy2">*</span> <span class="br0">&#41;</span><span class="sy4">;</span>
         <span class="kw3">printf</span><span class="br0">&#40;</span> <span class="st0">&quot;文字列: %s<span class="es1">\n</span>&quot;</span>, s <span class="br0">&#41;</span><span class="sy4">;</span>
       <span class="br0">&#125;</span>
       <span class="co1">// character</span>
       <span class="kw1">else</span> <span class="kw1">if</span><span class="br0">&#40;</span> <span class="sy2">*</span>format <span class="sy1">==</span> <span class="st0">'c'</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
         <span class="kw4">char</span> c <span class="sy1">=</span> <span class="br0">&#40;</span><span class="kw4">char</span><span class="br0">&#41;</span> <span class="kw3">va_arg</span><span class="br0">&#40;</span> argptr, <span class="kw4">int</span> <span class="br0">&#41;</span><span class="sy4">;</span>
         <span class="kw3">printf</span><span class="br0">&#40;</span> <span class="st0">&quot;文字: %c<span class="es1">\n</span>&quot;</span>, c <span class="br0">&#41;</span><span class="sy4">;</span>
         <span class="kw1">break</span><span class="sy4">;</span>
       <span class="br0">&#125;</span>
       <span class="co1">// integer</span>
       <span class="kw1">else</span> <span class="kw1">if</span><span class="br0">&#40;</span> <span class="sy2">*</span>format <span class="sy1">==</span> <span class="st0">'d'</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
         <span class="kw4">int</span> d <span class="sy1">=</span> <span class="kw3">va_arg</span><span class="br0">&#40;</span> argptr, <span class="kw4">int</span> <span class="br0">&#41;</span><span class="sy4">;</span>
         <span class="kw3">printf</span><span class="br0">&#40;</span> <span class="st0">&quot;整数: %d<span class="es1">\n</span>&quot;</span>, d <span class="br0">&#41;</span><span class="sy4">;</span>
       <span class="br0">&#125;</span>
&nbsp;
       format<span class="sy2">++</span><span class="sy4">;</span>
     <span class="br0">&#125;</span>
&nbsp;
     <span class="kw3">va_end</span><span class="br0">&#40;</span> argptr <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
&nbsp;
   <span class="kw4">int</span> main<span class="br0">&#40;</span> <span class="kw4">void</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
     my_printf<span class="br0">&#40;</span> <span class="st0">&quot;sdc&quot;</span>, <span class="st0">&quot;文字列です&quot;</span>, <span class="nu0">29</span>, <span class="st0">'X'</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
     <span class="kw1">return</span><span class="br0">&#40;</span> <span class="nu0">0</span> <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span></pre>
<p>
このコードを実行すると、以下のように表示されます:
</p>
<pre class="code">
   文字列: 文字列です
   整数: 29
   文字: X</pre>
</div>
</div>
</body>
</html>
