<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>algorithm:transform</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-11-13T05:52:33-0800" />
<meta name="keywords" content="algorithm,transform" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/algorithm/transform?do=index" title="Sitemap" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/algorithm/transform" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/algorithm/transform" />
<link rel="canonical" href="transform" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='algorithm';var JSINFO = {"id":"algorithm:transform","namespace":"algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">
<!-- TOC START -->
<div class="toc">
<div class="tocheader toctoggle" id="toc__header">Table of Contents</div>
<div id="toc__inside">

<ul class="toc">
<li class="clear">

<ul class="toc">
<li class="level2"><div class="li"><span class="li"><a href="transform#transform" class="toc">transform</a></span></div>
<ul class="toc">
<li class="level3"><div class="li"><span class="li"><a href="transform#parameters" class="toc">Parameters</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="transform#return_value" class="toc">Return value</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="transform#equivalent_function" class="toc">Equivalent function</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="transform#example" class="toc">Example</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="transform#complexity" class="toc">Complexity</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="transform#see_also" class="toc">See also</a></span></div></li></ul>
</li></ul>
</li></ul>
</div>
</div>
<!-- TOC END -->

<h2 class="sectionedit1"><a name="transform" id="transform">transform</a></h2>
<div class="level2">
<pre class="cpp code cpp"><span class="co2">#include &lt;algorithm&gt;</span>
&nbsp;
<span class="kw2">template</span><span class="sy1">&lt;</span> <span class="kw2">class</span> InputIterator, <span class="kw2">class</span> OutputIterator, <span class="kw2">class</span> UnaryOperation <span class="sy1">&gt;</span>
OutputIterator transform<span class="br0">&#40;</span> InputIterator first1, InputIterator last1,
                          OutputIterator d_first, UnaryOperation unary_op <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
<span class="kw2">template</span><span class="sy1">&lt;</span> <span class="kw2">class</span> InputIterator1, <span class="kw2">class</span> InputIterator2, <span class="kw2">class</span> OutputIterator, <span class="kw2">class</span> BinaryOperation <span class="sy1">&gt;</span>
OutputIterator transform<span class="br0">&#40;</span> InputIterator first1, InputIterator last1,
                          InputIterator first2, OutputIterator d_first, BinaryOperation binary_op <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
Applies the given function to a range and stores the result in another range. In the first version unary operation <code>unary_op</code> is applied to range, defined by <code>[first1, last1)</code>. In the second version binary operation is applied to pairs of elements from two ranges: one defined by <code>[first1, last1)</code> and other beginning at <code>first2</code>.
</p>

</div>
<!-- EDIT1 SECTION "transform" [1-906] -->
<h3 class="sectionedit2"><a name="parameters" id="parameters">Parameters</a></h3>
<div class="level3">

<p>

<code>first1</code>, <code>last</code> - the first range of the elements to be transformed
</p>

<p>
<code>first2</code> - the beginning of the second range of the elements to be transformed
</p>

<p>
<code>d_first</code> - beginning of the range to write the results to
</p>

<p>
<code>unary_op</code> - unary function to be applied
</p>

<p>
<code>binary_op</code> - binary function to be applied
</p>

</div>
<!-- EDIT2 SECTION "Parameters" [907-1236] -->
<h3 class="sectionedit3"><a name="return_value" id="return_value">Return value</a></h3>
<div class="level3">

<p>

output iterator to the element past the last element transformed.
</p>

</div>
<!-- EDIT3 SECTION "Return value" [1237-1325] -->
<h3 class="sectionedit4"><a name="equivalent_function" id="equivalent_function">Equivalent function</a></h3>
<div class="level3">

<p>

First version:

</p>
<pre class="cpp code cpp"><span class="kw2">template</span><span class="sy1">&lt;</span><span class="kw2">class</span> InputIterator, <span class="kw2">class</span> OutputIterator, <span class="kw2">class</span> UnaryOperation<span class="sy1">&gt;</span>
OutputIterator copy<span class="br0">&#40;</span>InputIterator first1, InputIterator last1,
                    OutputIterator d_first, UnaryOperation unary_op<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw1">while</span> <span class="br0">&#40;</span>first1 <span class="sy3">!</span><span class="sy1">=</span> last1<span class="br0">&#41;</span> <span class="br0">&#123;</span>
        <span class="sy2">*</span>d_first<span class="sy2">++</span> <span class="sy1">=</span> unary_op<span class="br0">&#40;</span><span class="sy2">*</span>first1<span class="sy2">++</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="br0">&#125;</span>
    <span class="kw1">return</span> d_first<span class="sy4">;</span>
<span class="br0">&#125;</span></pre>
<p>
Second version:

</p>
<pre class="cpp code cpp"><span class="kw2">template</span><span class="sy1">&lt;</span><span class="kw2">class</span> InputIterator1, <span class="kw2">class</span> InputIterator2, <span class="kw2">class</span> OutputIterator, <span class="kw2">class</span> BinaryOperation<span class="sy1">&gt;</span>
OutputIterator copy<span class="br0">&#40;</span>InputIterator first1, InputIterator last1,
                    InputIterator first2, OutputIterator d_first, BinaryOperation binary_op<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw1">while</span> <span class="br0">&#40;</span>first1 <span class="sy3">!</span><span class="sy1">=</span> last1<span class="br0">&#41;</span> <span class="br0">&#123;</span>
        <span class="sy2">*</span>d_first<span class="sy2">++</span> <span class="sy1">=</span> binary_op<span class="br0">&#40;</span><span class="sy2">*</span>first1<span class="sy2">++</span>, <span class="sy2">*</span>first2<span class="sy2">++</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="br0">&#125;</span>
    <span class="kw1">return</span> d_first<span class="sy4">;</span>
<span class="br0">&#125;</span></pre>
</div>
<!-- EDIT4 SECTION "Equivalent function" [1326-2098] -->
<h3 class="sectionedit5"><a name="example" id="example">Example</a></h3>
<div class="level3">

<p>

The following code uses transform to convert a <a href="../../string/basic_string" class="wikilink2" title="string:basic_string" rel="nofollow">string</a> to 
uppercase using the <a href="../../string/c/toupper" class="wikilink1" title="string:c:toupper">toupper function</a>:
</p>
<pre class="cpp code cpp"><span class="co2">#include &lt;string&gt;</span>
<span class="co2">#include &lt;algorithm&gt;</span>
<span class="co2">#include &lt;iostream&gt;</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    std<span class="sy4">::</span><span class="me2">string</span> s<span class="br0">&#40;</span><span class="st0">&quot;hello&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    std<span class="sy4">::</span><span class="me2">transform</span><span class="br0">&#40;</span>s.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, s.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, s.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="br0">&#40;</span><span class="kw4">int</span> <span class="br0">&#40;</span><span class="sy2">*</span><span class="br0">&#41;</span><span class="br0">&#40;</span><span class="kw4">int</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="kw3">toupper</span><span class="br0">&#41;</span><span class="sy4">;</span>
    std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> s<span class="sy4">;</span>
&nbsp;
    <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre>
<p>
Output:
</p>
<pre class="code">
HELLO</pre>
</div>
<!-- EDIT5 SECTION "Example" [2099-2529] -->
<h3 class="sectionedit6"><a name="complexity" id="complexity">Complexity</a></h3>
<div class="level3">

<p>

linear in the distance between <code>first1</code> and <code>last1</code>
</p>

</div>
<!-- EDIT6 SECTION "Complexity" [2530-2606] -->
<h3 class="sectionedit7"><a name="see_also" id="see_also">See also</a></h3>
<div class="level3">

<p>

<a href="copy" class="wikilink1" title="algorithm:copy">copy</a>, <a href="fill" class="wikilink1" title="algorithm:fill">fill</a>, <a href="generate" class="wikilink1" title="algorithm:generate">generate</a>
</p>

</div>
<!-- EDIT7 SECTION "See also" [2607-] --></div>
</body>
</html>
