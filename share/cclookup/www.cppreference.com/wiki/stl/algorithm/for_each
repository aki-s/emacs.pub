<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>algorithm:for_each</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-11-13T11:14:07-0800" />
<meta name="keywords" content="algorithm,for_each" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/algorithm/for_each?do=index" title="Sitemap" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/algorithm/for_each" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/algorithm/for_each" />
<link rel="canonical" href="for_each" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='algorithm';var JSINFO = {"id":"algorithm:for_each","namespace":"algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">
<!-- TOC START -->
<div class="toc">
<div class="tocheader toctoggle" id="toc__header">Table of Contents</div>
<div id="toc__inside">

<ul class="toc">
<li class="clear">

<ul class="toc">
<li class="level2"><div class="li"><span class="li"><a href="for_each#for_each" class="toc">for_each</a></span></div>
<ul class="toc">
<li class="level3"><div class="li"><span class="li"><a href="for_each#parameters" class="toc">Parameters</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="for_each#return_value" class="toc">Return value</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="for_each#equivalent_function" class="toc">Equivalent function</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="for_each#example" class="toc">Example</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="for_each#complexity" class="toc">Complexity</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="for_each#see_also" class="toc">See also</a></span></div></li></ul>
</li></ul>
</li></ul>
</div>
</div>
<!-- TOC END -->

<h2 class="sectionedit1"><a name="for_each" id="for_each">for_each</a></h2>
<div class="level2">
<pre class="cpp code cpp"><span class="co2">#include &lt;algorithm&gt;</span>
&nbsp;
<span class="kw2">template</span><span class="sy1">&lt;</span> <span class="kw2">class</span> InputIterator, <span class="kw2">class</span> UnaryFunction <span class="sy1">&gt;</span>
UnaryFunction for_each<span class="br0">&#40;</span> InputIterator first, InputIterator last, UnaryFunction f <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
Applies the given function <code>f</code> to each of the elements in the range <code>[first, last)</code>.
</p>

</div>
<!-- EDIT1 SECTION "for_each" [1-288] -->
<h3 class="sectionedit2"><a name="parameters" id="parameters">Parameters</a></h3>
<div class="level3">

<p>

<code>first</code>, <code>last</code> - the range to apply the function to
</p>

<p>
<code>f</code> - the function to be applied
</p>

</div>
<!-- EDIT2 SECTION "Parameters" [289-402] -->
<h3 class="sectionedit3"><a name="return_value" id="return_value">Return value</a></h3>
<div class="level3">

<p>

function that was applied
</p>

</div>
<!-- EDIT3 SECTION "Return value" [403-451] -->
<h3 class="sectionedit4"><a name="equivalent_function" id="equivalent_function">Equivalent function</a></h3>
<div class="level3">
<pre class="cpp code cpp"><span class="kw2">template</span><span class="sy1">&lt;</span><span class="kw2">class</span> InputIterator, <span class="kw2">class</span> UnaryFunction<span class="sy1">&gt;</span>
UnaryFunction for_each<span class="br0">&#40;</span>InputIterator first, InputIterator last, UnaryFunction f<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw1">for</span> <span class="br0">&#40;</span><span class="sy4">;</span> first <span class="sy3">!</span><span class="sy1">=</span> last<span class="sy4">;</span> <span class="sy2">++</span>first<span class="br0">&#41;</span> <span class="br0">&#123;</span>
        f<span class="br0">&#40;</span><span class="sy2">*</span>first<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="br0">&#125;</span>
    <span class="kw1">return</span> f<span class="sy4">;</span>
<span class="br0">&#125;</span></pre>
</div>
<!-- EDIT4 SECTION "Equivalent function" [452-708] -->
<h3 class="sectionedit5"><a name="example" id="example">Example</a></h3>
<div class="level3">

<p>

For example, the following code snippets define a unary function then use it to
increment all of the elements of an array:
</p>
<pre class="cpp code cpp"><span class="kw2">template</span><span class="sy1">&lt;</span><span class="kw2">class</span> T<span class="sy1">&gt;</span> <span class="kw4">struct</span> increment <span class="sy4">:</span> <span class="kw2">public</span> unary_function<span class="sy1">&lt;</span>T, <span class="kw4">void</span><span class="sy1">&gt;</span> <span class="br0">&#123;</span>
    <span class="kw4">void</span> operator<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#40;</span>T<span class="sy3">&amp;</span> x<span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        x<span class="sy2">++</span><span class="sy4">;</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="sy4">;</span>
&nbsp;
   ...
&nbsp;
   <span class="kw4">int</span> nums<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="br0">&#123;</span><span class="nu0">3</span>, <span class="nu0">4</span>, <span class="nu0">2</span>, <span class="nu0">9</span>, <span class="nu0">15</span>, <span class="nu0">267</span><span class="br0">&#125;</span><span class="sy4">;</span>
   <span class="kw4">const</span> <span class="kw4">int</span> N <span class="sy1">=</span> <span class="nu0">6</span><span class="sy4">;</span>
&nbsp;
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;Before, nums[] is: &quot;</span><span class="sy4">;</span>
   <span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">int</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> N<span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
       std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> nums<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
   std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> std<span class="sy4">::</span><span class="me2">endl</span><span class="sy4">;</span>
&nbsp;
   std<span class="sy4">::</span><span class="me2">for_each</span><span class="br0">&#40;</span>nums, nums <span class="sy2">+</span> N, increment<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
   std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;After, nums[] is: &quot;</span><span class="sy4">;</span>
   <span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">int</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> N<span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
       std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> nums<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span></pre>
<p>
Output:
</p>
<pre class="code">
Before, nums[] is: 3 4 2 9 15 267
After, nums[] is: 4 5 3 10 16 268</pre>
</div>
<!-- EDIT5 SECTION "Example" [709-1462] -->
<h3 class="sectionedit6"><a name="complexity" id="complexity">Complexity</a></h3>
<div class="level3">

<p>

linear in the distance between <code>first</code> and <code>last</code>
</p>

</div>
<!-- EDIT6 SECTION "Complexity" [1463-1537] -->
<h3 class="sectionedit7"><a name="see_also" id="see_also">See also</a></h3>
<div class="level3">

<p>

<a href="transform" class="wikilink1" title="algorithm:transform">transform</a>

</p>

</div>
<!-- EDIT7 SECTION "See also" [1538-] --></div>
</body>
</html>
