<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>algorithm:push_heap</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:18:12-0700" />
<meta name="keywords" content="algorithm,push_heap" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/algorithm/push_heap?do=index" title="Sitemap" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/algorithm/push_heap" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/algorithm/push_heap" />
<link rel="canonical" href="push_heap" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='algorithm';var JSINFO = {"id":"algorithm:push_heap","namespace":"algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">
<!-- TOC START -->
<div class="toc">
<div class="tocheader toctoggle" id="toc__header">Table of Contents</div>
<div id="toc__inside">

<ul class="toc">
<li class="clear">

<ul class="toc">
<li class="level2"><div class="li"><span class="li"><a href="push_heap#push_heap" class="toc">push_heap</a></span></div>
<ul class="toc">
<li class="level3"><div class="li"><span class="li"><a href="push_heap#parameters" class="toc">Parameters</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="push_heap#return_value" class="toc">Return value</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="push_heap#example" class="toc">Example</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="push_heap#complexity" class="toc">Complexity</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="push_heap#see_also" class="toc">See also</a></span></div></li></ul>
</li></ul>
</li></ul>
</div>
</div>
<!-- TOC END -->

<h2 class="sectionedit1"><a name="push_heap" id="push_heap">push_heap</a></h2>
<div class="level2">

<p>
Syntax:
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;algorithm&gt;</span>
    <span class="kw4">void</span> push_heap<span class="br0">&#40;</span> random_access_iterator start, random_access_iterator end <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">void</span> push_heap<span class="br0">&#40;</span> random_access_iterator start, random_access_iterator end, StrictWeakOrdering cmp <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
The push_heap() function adds an element (defined as the last element before
end) to a heap (defined as the range of elements between [start,&#039;&#039;end-1).
</p>

<p>
If the strict weak ordering comparison function object cmp is given, then it is
used instead of the &lt; operator to compare elements.
</p>

</div>
<!-- EDIT1 SECTION "push_heap" [1-539] -->
<h3 class="sectionedit2"><a name="parameters" id="parameters">Parameters</a></h3>
<div class="level3">

<p>

todo
</p>

</div>
<!-- EDIT2 SECTION "Parameters" [540-565] -->
<h3 class="sectionedit3"><a name="return_value" id="return_value">Return value</a></h3>
<div class="level3">

<p>

todo
</p>

</div>
<!-- EDIT3 SECTION "Return value" [566-593] -->
<h3 class="sectionedit4"><a name="example" id="example">Example</a></h3>
<div class="level3">
<pre class="cpp code cpp"><span class="co1">// range heap example</span>
<span class="co2">#include &lt;iostream&gt;</span>
<span class="co2">#include &lt;algorithm&gt;</span>
<span class="co2">#include &lt;vector&gt;</span>
<span class="kw2">using</span> <span class="kw2">namespace</span> std<span class="sy4">;</span>
&nbsp;
<span class="kw4">int</span> main <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
  <span class="kw4">int</span> myints<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="br0">&#123;</span><span class="nu0">10</span>,<span class="nu0">20</span>,<span class="nu0">30</span>,<span class="nu0">5</span>,<span class="nu0">15</span><span class="br0">&#125;</span><span class="sy4">;</span>
  vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> v<span class="br0">&#40;</span>myints,myints<span class="sy2">+</span><span class="nu0">5</span><span class="br0">&#41;</span><span class="sy4">;</span>
  vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">iterator</span> it<span class="sy4">;</span>
&nbsp;
  make_heap <span class="br0">&#40;</span>v.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,v.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;initial max heap   : &quot;</span> <span class="sy1">&lt;&lt;</span> v.<span class="me1">front</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
&nbsp;
  pop_heap <span class="br0">&#40;</span>v.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,v.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span> v.<span class="me1">pop_back</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;max heap after pop : &quot;</span> <span class="sy1">&lt;&lt;</span> v.<span class="me1">front</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
&nbsp;
  v.<span class="me1">push_back</span><span class="br0">&#40;</span><span class="nu0">99</span><span class="br0">&#41;</span><span class="sy4">;</span> push_heap <span class="br0">&#40;</span>v.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,v.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;max heap after push: &quot;</span> <span class="sy1">&lt;&lt;</span> v.<span class="me1">front</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
&nbsp;
  sort_heap <span class="br0">&#40;</span>v.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>,v.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
  <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;final sorted range :&quot;</span><span class="sy4">;</span>
  <span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">unsigned</span> i<span class="sy1">=</span><span class="nu0">0</span><span class="sy4">;</span> i<span class="sy1">&lt;</span>v.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span> <span class="sy1">&lt;&lt;</span> v<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="sy4">;</span>
&nbsp;
  <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
&nbsp;
  <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre>
<p>
Output:
initial max heap   : 30
</p>

<p>
max heap after pop : 20
</p>

<p>
max heap after push: 99
</p>

<p>
final sorted range : 5 10 15 20 99
</p>

</div>
<!-- EDIT4 SECTION "Example" [594-1418] -->
<h3 class="sectionedit5"><a name="complexity" id="complexity">Complexity</a></h3>
<div class="level3">

<p>

push_heap() runs in <a href="../../complexity" class="wikilink1" title="complexity">logarithmic time</a>.
</p>

</div>
<!-- EDIT5 SECTION "Complexity" [1419-1493] -->
<h3 class="sectionedit6"><a name="see_also" id="see_also">See also</a></h3>
<div class="level3">

<p>

<a href="is_heap" class="wikilink1" title="algorithm:is_heap">is_heap</a>, <a href="make_heap" class="wikilink1" title="algorithm:make_heap">make_heap</a>, <a href="pop_heap" class="wikilink1" title="algorithm:pop_heap">pop_heap</a>, <a href="sort_heap" class="wikilink1" title="algorithm:sort_heap">sort_heap</a>
</p>

</div>
<!-- EDIT6 SECTION "See also" [1494-] --></div>
</body>
</html>
