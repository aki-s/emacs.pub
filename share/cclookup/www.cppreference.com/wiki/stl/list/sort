<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>container:list:sort</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-11-10T08:12:12-0800" />
<meta name="keywords" content="container,list,sort" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/container/list/sort?do=index" title="Sitemap" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=container:list" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/container/list/sort" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/container/list/sort" />
<link rel="canonical" href="sort" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='container:list';var JSINFO = {"id":"container:list:sort","namespace":"container:list"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">
<!-- TOC START -->
<div class="toc">
<div class="tocheader toctoggle" id="toc__header">Table of Contents</div>
<div id="toc__inside">

<ul class="toc">
<li class="clear">

<ul class="toc">
<li class="level2"><div class="li"><span class="li"><a href="sort#listsort" class="toc">list::sort</a></span></div>
<ul class="toc">
<li class="level3"><div class="li"><span class="li"><a href="sort#parameters" class="toc">Parameters</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="sort#return_value" class="toc">Return value</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="sort#example" class="toc">Example</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="sort#complexity" class="toc">Complexity</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="sort#see_also" class="toc">See also</a></span></div></li></ul>
</li></ul>
</li></ul>
</div>
</div>
<!-- TOC END -->

<h2 class="sectionedit1"><a name="listsort" id="listsort">list::sort</a></h2>
<div class="level2">
<pre class="cpp code cpp"><span class="kw4">void</span> sort<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
<span class="kw2">template</span><span class="sy1">&lt;</span> <span class="kw2">class</span> Compare <span class="sy1">&gt;</span>
<span class="kw4">void</span> sort<span class="br0">&#40;</span> Compare comp <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
Sorts the list. One version of the function uses <code>operator&lt;</code> to compare the elements, another uses the given comparison function <code>comp</code>.
</p>

</div>
<!-- EDIT1 SECTION "list::sort" [1-246] -->
<h3 class="sectionedit2"><a name="parameters" id="parameters">Parameters</a></h3>
<div class="level3">

<p>

<code>comp</code> - binary comparison function which shall return <code>true</code> if the first argument should be treated less than the second
</p>

</div>
<!-- EDIT2 SECTION "Parameters" [247-394] -->
<h3 class="sectionedit3"><a name="return_value" id="return_value">Return value</a></h3>
<div class="level3">

<p>

(none)
</p>

</div>
<!-- EDIT3 SECTION "Return value" [395-424] -->
<h3 class="sectionedit4"><a name="example" id="example">Example</a></h3>
<div class="level3">
<pre class="cpp code cpp"><span class="co2">#include &lt;iostream&gt;</span>
<span class="co2">#include &lt;list&gt;</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    std<span class="sy4">::</span><span class="me2">list</span><span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> my_list<span class="sy4">;</span>
    my_list.<span class="me1">push_back</span><span class="br0">&#40;</span><span class="nu0">13</span><span class="br0">&#41;</span><span class="sy4">;</span>
    my_list.<span class="me1">push_back</span><span class="br0">&#40;</span><span class="nu0">6</span><span class="br0">&#41;</span><span class="sy4">;</span>
    my_list.<span class="me1">push_back</span><span class="br0">&#40;</span><span class="nu0">5</span><span class="br0">&#41;</span><span class="sy4">;</span>
    my_list.<span class="me1">push_back</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
    my_list.<span class="me1">push_back</span><span class="br0">&#40;</span><span class="nu0">13</span><span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
    my_list.<span class="me1">sort</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
    <span class="kw1">for</span> <span class="br0">&#40;</span>std<span class="sy4">::</span><span class="me2">list</span><span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">iterator</span> it <span class="sy1">=</span> my_list.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> it <span class="sy3">!</span><span class="sy1">=</span> my_list.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> <span class="sy2">++</span>it<span class="br0">&#41;</span> <span class="br0">&#123;</span>
        std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="sy2">*</span>it <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy4">;</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre>
<p>
Output:
</p>
<pre class="code">
1 5 6 13 15</pre>
</div>
<!-- EDIT4 SECTION "Example" [425-869] -->
<h3 class="sectionedit5"><a name="complexity" id="complexity">Complexity</a></h3>
<div class="level3">

<p>

logarithmic (<code>N log N</code>) in the size of the container.
</p>

</div>
<!-- EDIT5 SECTION "Complexity" [870-946] -->
<h3 class="sectionedit6"><a name="see_also" id="see_also">See also</a></h3>
<div class="level3">

<p>

<a href="reverse" class="wikilink1" title="container:list:reverse">reverse</a>
</p>

</div>
<!-- EDIT6 SECTION "See also" [947-] --></div>
</body>
</html>
