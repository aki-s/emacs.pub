<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="es"
 lang="es" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>es:keywords:explicit</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:32-0700" />
<meta name="keywords" content="es,keywords,explicit" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/es/keywords/explicit?do=index" title="Índice" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=es:keywords" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/es/keywords/explicit" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/es/keywords/explicit" />
<link rel="canonical" href="explicit" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='es:keywords';var JSINFO = {"id":"es:keywords:explicit","namespace":"es:keywords"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="explicit" id="explicit">explicit</a></h2>
<div class="level2">

<p>
Cuando un constructor en una clase es declarado como <code>explicit</code>, ese constructor no participa de las conversiones implícitas (automáticas) – pero sus argumentos aún pueden ser convertidos.
</p>

<p>
Ejemplo:
</p>
<pre class="cpp code cpp">    <span class="kw4">struct</span> foo <span class="br0">&#123;</span>
      <span class="kw2">explicit</span> foo<span class="br0">&#40;</span> <span class="kw4">int</span> a <span class="br0">&#41;</span>
        <span class="sy4">:</span> a_<span class="br0">&#40;</span> a <span class="br0">&#41;</span>
      <span class="br0">&#123;</span> <span class="br0">&#125;</span>
      <span class="co1">// a_ es público</span>
      <span class="kw4">int</span> a_<span class="sy4">;</span>
    <span class="br0">&#125;</span><span class="sy4">;</span>
&nbsp;
    <span class="co1">// la siguiente función toma como argumento un foo</span>
    <span class="kw4">int</span> bar<span class="br0">&#40;</span> <span class="kw4">const</span> foo <span class="sy3">&amp;</span> f <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      <span class="kw1">return</span> f.<span class="me1">a_</span><span class="sy4">;</span>
    <span class="br0">&#125;</span>
&nbsp;
    bar<span class="br0">&#40;</span> <span class="nu0">1</span> <span class="br0">&#41;</span><span class="sy4">;</span>  <span class="co1">// error de compilación:</span>
               <span class="co1">// no se puede convertir implícitamente de &quot;int&quot; a &quot;foo&quot;.</span>
&nbsp;
    bar<span class="br0">&#40;</span> foo<span class="br0">&#40;</span> <span class="nu0">1</span> <span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>  <span class="co1">// funciona: se ha realizado la conversión explícitamente.</span>
&nbsp;
    bar<span class="br0">&#40;</span> <span class="kw2">static_cast</span><span class="sy1">&lt;</span>foo<span class="sy1">&gt;</span><span class="br0">&#40;</span> <span class="nu0">1</span> <span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>  <span class="co1">// funciona: se puede llamar al constructor explícito.</span>
&nbsp;
    bar<span class="br0">&#40;</span> foo<span class="br0">&#40;</span> <span class="nu16">1.0</span> <span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>  <span class="co1">// funciona: el argumento de tipo &quot;double&quot; se puede convertir a &quot;int&quot;</span>
                        <span class="co1">// el cual se pasa como argumento en la construcción explícita</span></pre>
<p>
El uso de <code>explicit</code> permite evitar que el compilador haga conversiones “silenciosas”, difíciles de detectar, al usar clases en expresiones que involucran a valores o tipos de datos incorporados en el compilador.
</p>

</div>
<!-- EDIT1 SECTION "explicit" [1-1170] -->
<h3 class="sectionedit2"><a name="c_0x" id="c_0x">C++0x</a></h3>
<div class="level3">

<p>

En C++0x, la palabra clave <code>explicit</code> será acoplable también a los operadores de conversión, de modo de evitar conversiones implícitas inversas:
</p>
<pre class="cpp code cpp">    <span class="kw4">struct</span> foo <span class="br0">&#123;</span>
      <span class="kw2">explicit</span> foo<span class="br0">&#40;</span> <span class="kw4">int</span> a <span class="br0">&#41;</span>
        <span class="sy4">:</span> a_<span class="br0">&#40;</span> a <span class="br0">&#41;</span>
      <span class="br0">&#123;</span> <span class="br0">&#125;</span>
      <span class="kw2">explicit</span> operator <span class="kw4">double</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="kw4">const</span> <span class="br0">&#123;</span>
        <span class="kw1">return</span> <span class="br0">&#40;</span><span class="kw4">double</span><span class="br0">&#41;</span>a_<span class="sy4">;</span>
        <span class="br0">&#125;</span>
      <span class="co1">// a_ es público</span>
      <span class="kw4">int</span> a_<span class="sy4">;</span>
    <span class="br0">&#125;</span><span class="sy4">;</span>
&nbsp;
    <span class="co1">// la siguiente función toma como argumento un foo y retorna un double</span>
    <span class="kw4">double</span> bar<span class="br0">&#40;</span> <span class="kw4">const</span> foo <span class="sy3">&amp;</span> f <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      <span class="kw1">return</span> f<span class="sy4">;</span>  <span class="co1">// error de compilación:</span>
                 <span class="co1">// no se puede convertir implícitamente de &quot;foo&quot; a &quot;double&quot;.</span>
      <span class="kw1">return</span> <span class="br0">&#40;</span><span class="kw4">double</span><span class="br0">&#41;</span>f<span class="sy4">;</span>  <span class="co1">// funciona: se puede convertir explícitamente.</span>
&nbsp;
    <span class="br0">&#125;</span></pre>
<p>
Tópicos Relacionados: <a href="static_cast" class="wikilink1" title="es:keywords:static_cast">static_cast</a>.
</p>

</div>
<!-- EDIT2 SECTION "C++0x" [1171-] --></div>
</body>
</html>
