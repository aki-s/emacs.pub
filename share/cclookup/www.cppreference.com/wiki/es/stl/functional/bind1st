<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="es"
 lang="es" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>es:util:functional:bind1st</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:32-0700" />
<meta name="keywords" content="es,util,functional,bind1st" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/es/util/functional/bind1st?do=index" title="Índice" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=es:util:functional" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/es/util/functional/bind1st" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/es/util/functional/bind1st" />
<link rel="canonical" href="bind1st" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='es:util:functional';var JSINFO = {"id":"es:util:functional:bind1st","namespace":"es:util:functional"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">
<!-- TOC START -->
<div class="toc">
<div class="tocheader toctoggle" id="toc__header">Tabla de Contenidos</div>
<div id="toc__inside">

<ul class="toc">
<li class="level1"><div class="li"><span class="li"><a href="bind1st#bind1st" class="toc">bind1st</a></span></div>
<ul class="toc">
<li class="level2"><div class="li"><span class="li"><a href="bind1st#ejemplo" class="toc">Ejemplo</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="bind1st#detalles" class="toc">Detalles</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="bind1st#topicos_relacionados" class="toc">Tópicos Relacionados</a></span></div></li></ul>
</li></ul>
</div>
</div>
<!-- TOC END -->

<h1 class="sectionedit1"><a name="bind1st" id="bind1st">bind1st</a></h1>
<div class="level1">

<p>
Sintaxis:
</p>
<pre class="cpp code cpp"><span class="kw2">template</span> <span class="sy1">&lt;</span><span class="kw2">typename</span> Functor, <span class="kw2">typename</span> T<span class="sy1">&gt;</span>
  binder1st<span class="sy1">&lt;</span>Functor<span class="sy1">&gt;</span> bind1st <span class="br0">&#40;</span><span class="kw4">const</span> Functor<span class="sy3">&amp;</span> f, <span class="kw4">const</span> T<span class="sy3">&amp;</span> v<span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
<span class="co1">// bind2nd está similarmente definida</span></pre><ul>
<li class="level1"><div class="li"> <code>f</code> es un functor que toma dos parámetros; idealmente debe heredar de <a href="binary_function" class="wikilink1" title="es:util:functional:binary_function">binary_function</a>.</div>
</li>
</ul>

<p>

<code>bind1st</code> es una función definida en la cabecera <code><a href="start" class="wikilink1" title="es:util:functional:start">&lt;functional&gt;</a></code> que crea un functoide <em>unario</em> a partir de un functoide <em>binario</em>, de tal manera que el functoide creado invoca al functoide binario manteniendo su primer argumento en el valor fijo <code>v</code>. En otras palabras, dado un functoide binario <em>f</em>, la invocación <code>bind1st(f, v)</code> crea un functoide unario <em>g</em> tal que:

</p>
<pre class="cpp code cpp">g <span class="br0">&#40;</span>x<span class="br0">&#41;</span> → f <span class="br0">&#40;</span>v,x<span class="br0">&#41;</span></pre>
<p>
El tipo retornado por la función es el tipo de functoide <code>binder1st&lt;Functor&gt;</code> donde <em>Functor</em> es el tipo del functoide.
</p>

<p>
La función está diseñada para ser invocada pasando el functoide resultado a una función o <a href="http://www.cppreference.com/wiki/es/util/algorithm/start" class="wikilink2" title="es:util:algorithm:start" rel="nofollow">algoritmo</a> directamente, sin necesidad de declarar explícitamente una variable y su tipo. En el futuro estándar C++0x, será posible declarar automáticamente una variable functoide gracias a la palabra clave <a href="../../../keywords/auto" class="wikilink1" title="keywords:auto">auto</a>:
</p>
<pre class="cpp code cpp">    <span class="kw4">auto</span> functoide <span class="sy1">=</span> bind1st <span class="br0">&#40;</span>less<span class="sy1">&lt;</span><span class="kw4">double</span><span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, M_PI<span class="br0">&#41;</span><span class="sy4">;</span>  <span class="co1">// functoide:= double → bool</span>
    ....
    <span class="me1">q</span> <span class="sy1">=</span> functoide<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>    <span class="co1">// equivale a less&lt;double&gt;()(M_PI, 0)  --&gt; (M_PI &lt; 0)  ; retorna false</span>
    q <span class="sy1">=</span> functoide<span class="br0">&#40;</span><span class="nu0">10</span><span class="br0">&#41;</span><span class="sy4">;</span>   <span class="co1">// equivale a less&lt;double&gt;()(M_PI, 10) --&gt; (M_PI &lt; 10) ; retorna true</span></pre>
</div>
<!-- EDIT1 SECTION "bind1st" [1-1502] -->
<h2 class="sectionedit2"><a name="ejemplo" id="ejemplo">Ejemplo</a></h2>
<div class="level2">

<p>

<img src="../../../lib/images/smileys/fixme.gif" class="middle" alt="FIXME" />
</p>

</div>
<!-- EDIT2 SECTION "Ejemplo" [1503-1531] -->
<h2 class="sectionedit3"><a name="detalles" id="detalles">Detalles</a></h2>
<div class="level2">

<p>

En el próximo estándar de C++, “C++0x”, tanto bind1st como bind2nd serán deshauciados a favor del constructor genérico <code>std::bind</code>:
</p>
<pre class="cpp code cpp">  <span class="kw4">auto</span> fa1 <span class="sy1">=</span> std<span class="sy4">::</span><span class="me2">bind</span> <span class="br0">&#40;</span>less<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="nu0">1</span>, _1<span class="br0">&#41;</span><span class="sy4">;</span>       <span class="co1">// invoca a less&lt;int&gt;()(1, x)    --&gt; (1 &lt; x)</span>
  <span class="kw4">auto</span> fa2 <span class="sy1">=</span> std<span class="sy4">::</span><span class="me2">bind</span> <span class="br0">&#40;</span>greater<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, _1, <span class="sy2">-</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>   <span class="co1">// invoca a greater&lt;int&gt;(y, -1)  --&gt; (y &gt; -1)</span></pre>
</div>
<!-- EDIT3 SECTION "Detalles" [1532-1905] -->
<h2 class="sectionedit4"><a name="topicos_relacionados" id="topicos_relacionados">Tópicos Relacionados</a></h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> <code><a href="bind2nd" class="wikilink1" title="es:util:functional:bind2nd">bind2nd</a></code> – fija el segundo parámetro de un functoide</div>
</li>
</ul>

</div>
<!-- EDIT4 SECTION "Tópicos Relacionados" [1906-] --></div>
</body>
</html>
