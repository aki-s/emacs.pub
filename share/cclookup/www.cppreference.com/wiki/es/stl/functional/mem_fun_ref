<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="es"
 lang="es" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>es:util:functional:mem_fun_ref</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:32-0700" />
<meta name="keywords" content="es,util,functional,mem_fun_ref" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/es/util/functional/mem_fun_ref?do=index" title="Índice" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=es:util:functional" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/es/util/functional/mem_fun_ref" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/es/util/functional/mem_fun_ref" />
<link rel="canonical" href="mem_fun_ref" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='es:util:functional';var JSINFO = {"id":"es:util:functional:mem_fun_ref","namespace":"es:util:functional"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">
<!-- TOC START -->
<div class="toc">
<div class="tocheader toctoggle" id="toc__header">Tabla de Contenidos</div>
<div id="toc__inside">

<ul class="toc">
<li class="level1"><div class="li"><span class="li"><a href="mem_fun_ref#mem_fun_ref" class="toc">mem_fun_ref</a></span></div>
<ul class="toc">
<li class="level2"><div class="li"><span class="li"><a href="mem_fun_ref#ejemplo" class="toc">Ejemplo</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="mem_fun_ref#detalles" class="toc">Detalles</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="mem_fun_ref#topicos_relacionados" class="toc">Tópicos Relacionados</a></span></div></li></ul>
</li></ul>
</div>
</div>
<!-- TOC END -->

<h1 class="sectionedit1"><a name="mem_fun_ref" id="mem_fun_ref">mem_fun_ref</a></h1>
<div class="level1">

<p>
Sintaxis:
</p>
<pre class="cpp code cpp"><span class="kw2">template</span> <span class="sy1">&lt;</span><span class="kw2">class</span> R, <span class="kw2">class</span> C<span class="sy1">&gt;</span>
  mem_fun_ref_t<span class="sy1">&lt;</span>R,C<span class="sy1">&gt;</span> mem_fun_ref <span class="br0">&#40;</span>R <span class="br0">&#40;</span>C<span class="sy4">::</span><span class="sy2">*</span>fn<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
<span class="kw2">template</span> <span class="sy1">&lt;</span><span class="kw2">class</span> R, <span class="kw2">class</span> C, <span class="kw2">class</span> A<span class="sy1">&gt;</span>
  mem_fun1_ref_t<span class="sy1">&lt;</span>R,C,A<span class="sy1">&gt;</span> mem_fun_ref <span class="br0">&#40;</span>R <span class="br0">&#40;</span>C<span class="sy4">::</span><span class="sy2">*</span>fn<span class="br0">&#41;</span><span class="br0">&#40;</span>A<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
<span class="co1">// más definiciones son provistas para encapsular funciones miembro const</span></pre><ul>
<li class="level1"><div class="li"> <code>fn</code> es un puntero a una función miembro de una clase (la cual debe estar definida cuando <code>mem_fun_ref</code> es invocada). El tipo de la función es determinado automaticamente en base a su firma, pudiendo tomar cero argumentos (como por ejemplo <code>&amp;std::string::length</code>) o un argumento (como por ejemplo <code>&amp;std::ostream::flags</code>). Ver sin embargo la sección <a href="mem_fun_ref#detalles" title="es:util:functional:mem_fun_ref &crarr;" class="wikilink1">Detalles</a>.</div>
</li>
</ul>

<p>

<strong><code>mem_fun_ref</code></strong> es una función definida en la cabecera <code><a href="http://www.cppreference.com/wiki/es/util/start" class="wikilink2" title="es:util:start" rel="nofollow">&lt;functional&gt;</a></code> que crea un functoide a partir de una función miembro <code>fn</code> de una clase <code>C</code>. El functoide define un <code>operator()</code> con lo cual puede modelar el mismo comportamiento que el de invocar a la función miembro; para esto, se define como el tipo del primer argumento la instancia de la clase, es decir <code>C&amp;</code> (o <code>C const&amp;</code>).
</p>

<p>
El tipo retornado por la función es el tipo de functoide:

</p>
<ul>
<li class="level1"><div class="li"> <code><a href="http://www.cppreference.com/wiki/es/util/functional/mem_fun_ref_t" class="wikilink2" title="es:util:functional:mem_fun_ref_t" rel="nofollow">mem_fun_ref_t</a>&lt;Resultado,Clase&gt;</code> si <code>C::fn</code> no tiene argumentos.</div>
<ul>
<li class="level2"><div class="li"> <code>const_…</code> si la función miembro es <em>const</em>.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> <code><a href="http://www.cppreference.com/wiki/es/util/functional/mem_fun1_ref_t" class="wikilink2" title="es:util:functional:mem_fun1_ref_t" rel="nofollow">mem_fun1_ref_t</a>&lt;Resultado,Clase,Argumento&gt;</code> si <code>C::fn</code> toma un argumento.</div>
<ul>
<li class="level2"><div class="li"> <code>const_…</code> si la función miembro es <em>const</em>.</div>
</li>
</ul>
</li>
</ul>

<p>

La función está diseñada para ser invocada pasando el functoide resultado a una función o <a href="http://www.cppreference.com/wiki/es/util/algorithm/start" class="wikilink2" title="es:util:algorithm:start" rel="nofollow">algoritmo</a> directamente, sin necesidad de declarar explícitamente una variable y su tipo. En el futuro estándar C++0x, será posible declarar automáticamente una variable functoide gracias a la palabra clave <a href="../../../keywords/auto" class="wikilink1" title="keywords:auto">auto</a>:
</p>
<pre class="cpp code cpp">    <span class="kw4">auto</span> functoide <span class="sy1">=</span> mem_fun_ref <span class="br0">&#40;</span><span class="sy3">&amp;</span>std<span class="sy4">::</span><span class="me2">map</span><span class="sy1">&lt;</span><span class="kw4">int</span>,std<span class="sy4">::</span><span class="me2">string</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">count</span><span class="br0">&#41;</span><span class="sy4">;</span>
    ....
    <span class="me1">n</span> <span class="sy1">=</span> functoide<span class="br0">&#40;</span>my_map, val<span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// equivale a my_map.count(val)</span></pre>
</div>
<!-- EDIT1 SECTION "mem_fun_ref" [1-1945] -->
<h2 class="sectionedit2"><a name="ejemplo" id="ejemplo">Ejemplo</a></h2>
<div class="level2">

<p>

<img src="../../../lib/images/smileys/fixme.gif" class="middle" alt="FIXME" />
</p>

</div>
<!-- EDIT2 SECTION "Ejemplo" [1946-1973] -->
<h2 class="sectionedit3"><a name="detalles" id="detalles">Detalles</a></h2>
<div class="level2">

<p>

El functoide retornado por <code>mem_fun_ref</code> toma como primer argumento una (referencia a) <em>instancia</em> de una clase. Un functoide creado por la función hermana <a href="mem_fun" class="wikilink1" title="es:util:functional:mem_fun">mem_fun</a> toma como primer argumento un <em>puntero</em> a una instancia de la clase. La distinción es importante al usar, por ejemplo, contenedores STL almacenando punteros polimórficos.
</p>

<p>
<code>mem_fun_ref</code> adapta funciones miembro que tomen cero o un argumentos. Para funciones de dos o más argumentos, es necesario utilizar una construcción más avanzada como <code>std::function</code> que será incorporada desde C++0x.
</p>

</div>
<!-- EDIT3 SECTION "Detalles" [1974-2571] -->
<h2 class="sectionedit4"><a name="topicos_relacionados" id="topicos_relacionados">Tópicos Relacionados</a></h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> <code><a href="mem_fun" class="wikilink1" title="es:util:functional:mem_fun">mem_fun</a></code> – crea un functoide desde una función miembro de una clase</div>
</li>
<li class="level1"><div class="li"> <code><a href="ptr_fun" class="wikilink1" title="es:util:functional:ptr_fun">ptr_fun</a></code> – crea un functoide desde un puntero a una función</div>
</li>
<li class="level1"><div class="li"> <code><a href="bind1st" class="wikilink1" title="es:util:functional:bind1st">bind1st</a></code>, <code><a href="bind2nd" class="wikilink1" title="es:util:functional:bind2nd">bind2nd</a></code> – fijar los parámetros de un functoide</div>
</li>
</ul>

</div>
<!-- EDIT4 SECTION "Tópicos Relacionados" [2572-] --></div>
</body>
</html>
