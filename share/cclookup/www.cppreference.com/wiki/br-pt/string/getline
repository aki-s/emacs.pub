<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="br-pt"
 lang="br-pt" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>br-pt:string:getline</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:18:03-0700" />
<meta name="keywords" content="br-pt,string,getline" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/br-pt/string/getline?do=index" title="Sitemap" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=br-pt:string" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/br-pt/string/getline" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/br-pt/string/getline" />
<link rel="canonical" href="getline" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='br-pt:string';var JSINFO = {"id":"br-pt:string:getline","namespace":"br-pt:string"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="getline" id="getline">getline</a></h2>
<div class="level2">

<p>
Sintaxe:
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;string&gt;</span>
    istream<span class="sy3">&amp;</span> std<span class="sy4">::</span><span class="me2">getline</span><span class="br0">&#40;</span> istream<span class="sy3">&amp;</span> is, string<span class="sy3">&amp;</span> s <span class="br0">&#41;</span><span class="sy4">;</span>
    istream<span class="sy3">&amp;</span> std<span class="sy4">::</span><span class="me2">getline</span><span class="br0">&#40;</span> istream<span class="sy3">&amp;</span> is, string<span class="sy3">&amp;</span> s, Char delimiter <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
O header string do C++ define a função global getline() para ler strings de um
stream E/S (I/O stream). A função getline(), que não é parte da classe string,
lê uma linha tal como escrita e guarda-a em s. Se um caracter de delimitação for
especificado, então getline() usará delimiter para decidir quando deve parar de ler
dados. Caso contrário, invoque a segunda forma como se segue:

</p>
<pre class="cpp code cpp"> <span class="kw1">return</span> getline<span class="br0">&#40;</span> is, s, is.<span class="me1">widen</span><span class="br0">&#40;</span> <span class="st0">'<span class="es1">\n</span>'</span> <span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
NOTA: <code>istream</code> é o tipo istream <code>basic_istream&lt;Char&gt;</code> de acordo com o tipo de caracter.
</p>

<p>
Por exemplo, o código seguinte lê uma linha de texto de stdin e mostra-a em stdout:
</p>
<pre class="cpp code cpp">   string s<span class="sy4">;</span>
   getline<span class="br0">&#40;</span> <span class="kw3">cin</span>, s <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;You entered &quot;</span> <span class="sy1">&lt;&lt;</span> s <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span></pre>
<p>
Depois de guardar uma linha de dados numa string, pode ver que
<a href="../io/sstream/start" class="wikilink1" title="br-pt:io:sstream:start">stringstreams</a> são úteis em extrair dados dessa
string. Por exemplo, o código seguinte lê números da entrada
standard (standard input), ignorando quaisquer linhas “comentadas”
que começam com duas barras:
</p>
<pre class="cpp code cpp">    <span class="co1">// espera números delimitados por espaços ou linhas que começam com</span>
    <span class="co1">// duas barras (//)</span>
    string s<span class="sy4">;</span>
    <span class="kw1">while</span><span class="br0">&#40;</span> getline<span class="br0">&#40;</span><span class="kw3">cin</span>,s<span class="br0">&#41;</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      <span class="kw1">if</span><span class="br0">&#40;</span> s.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">&gt;=</span> <span class="nu0">2</span> <span class="sy3">&amp;&amp;</span> s<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy1">==</span> <span class="st0">'/'</span> <span class="sy3">&amp;&amp;</span> s<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy1">==</span> <span class="st0">'/'</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
        <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;  ignoring comment: &quot;</span> <span class="sy1">&lt;&lt;</span> s <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
      <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
        istringstream ss<span class="br0">&#40;</span>s<span class="br0">&#41;</span><span class="sy4">;</span>
        <span class="kw4">double</span> d<span class="sy4">;</span>
        <span class="kw1">while</span><span class="br0">&#40;</span> ss <span class="sy1">&gt;&gt;</span> d <span class="br0">&#41;</span> <span class="br0">&#123;</span>
          <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;  got a number: &quot;</span> <span class="sy1">&lt;&lt;</span> d <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
        <span class="br0">&#125;</span>
      <span class="br0">&#125;</span>
    <span class="br0">&#125;</span></pre>
<p>
Quando executado com um utilizador a fornecer a entrada, o código acima pode produzir a seguinte saída:
</p>
<pre class="code">
    // test
      ignoring comment: // test
    23.3 -1 3.14159
      got a number: 23.3
      got a number: -1
      got a number: 3.14159
    // next batch
      ignoring comment: // next batch
    1 2 3 4 5
      got a number: 1
      got a number: 2
      got a number: 3
      got a number: 4
      got a number: 5
    50
      got a number: 50</pre>
<p>
Uma vez que a função getline() começa a ler na posição actual do ficheiro, também pode
ser usada para ler o resto de uma linha, ou quaisquer caracteres até ao delimitador especificado.
</p>

<p>
Tópicos Relacionados: <a href="../io/get" class="wikilink1" title="br-pt:io:get">get</a>, <a href="../io/getline" class="wikilink1" title="br-pt:io:getline">getline</a>, <a href="../io/sstream/start" class="wikilink1" title="br-pt:io:sstream:start">stringstream</a>

</p>

</div>
<!-- EDIT1 SECTION "getline" [3-] --></div>
</body>
</html>
