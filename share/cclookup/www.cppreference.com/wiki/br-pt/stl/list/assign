<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="br-pt"
 lang="br-pt" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>br-pt:container:list:assign</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:18:04-0700" />
<meta name="keywords" content="br-pt,container,list,assign" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/br-pt/container/list/assign?do=index" title="Sitemap" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=br-pt:container:list" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/br-pt/container/list/assign" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/br-pt/container/list/assign" />
<link rel="canonical" href="assign" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='br-pt:container:list';var JSINFO = {"id":"br-pt:container:list:assign","namespace":"br-pt:container:list"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="assign" id="assign">assign</a></h2>
<div class="level2">

<p>
Syntaxe:
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;list&gt;</span>
    <span class="kw4">void</span> assign<span class="br0">&#40;</span> size_type num, <span class="kw4">const</span> T<span class="sy3">&amp;</span> val <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">void</span> assign<span class="br0">&#40;</span> input_iterator inicio, input_iterator fim <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
A função assign() atribui à lista <strong>num</strong> cópias de <strong>val</strong> ou atribui valores de <strong>inicio</strong> a <strong>fim</strong>.
</p>

<p>
A função destrói o conteúdo anterior da lista.
</p>

<p>
Por exemplo, o código a seguir usa assign() para colocar 10 cópias do inteiro 42 em uma lista:
</p>
<pre class="cpp code cpp">   list<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> v<span class="sy4">;</span>
   list<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">iterator</span> it<span class="sy4">;</span>
   v.<span class="me1">assign</span><span class="br0">&#40;</span> <span class="nu0">10</span>, <span class="nu0">42</span> <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> it <span class="sy1">=</span> v.<span class="me1">begin</span><span class="sy4">;</span> it<span class="sy3">!</span><span class="sy1">=</span> v.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> it<span class="sy2">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="sy2">*</span>it <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span></pre>
<p>
O código acima gera a seguinte saída:
</p>
<pre class="code">
   42 42 42 42 42 42 42 42 42 42</pre>
<p>
O próximo exemplo mostra como assign() pode ser usado para copiar um vector para outro:
</p>
<pre class="cpp code cpp">   list<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> v1<span class="sy4">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">10</span><span class="sy4">;</span> i<span class="sy2">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     v1.<span class="me1">push_back</span><span class="br0">&#40;</span> i <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
&nbsp;
   list<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> v2<span class="sy4">;</span>
   v2.<span class="me1">assign</span><span class="br0">&#40;</span> v1.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, v1.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
   list<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">iterator</span> it<span class="sy4">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> it<span class="sy1">=</span>v2.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> it<span class="sy3">!</span><span class="sy1">=</span>v2.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> it<span class="sy2">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="sy2">*</span>it <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span></pre>
<p>
A saída do código acima é:
</p>
<pre class="cpp code cpp">   <span class="nu0">0</span> <span class="nu0">1</span> <span class="nu0">2</span> <span class="nu0">3</span> <span class="nu0">4</span> <span class="nu0">5</span> <span class="nu0">6</span> <span class="nu0">7</span> <span class="nu0">8</span> <span class="nu0">9</span></pre>
<p>

Tópicos relacionados: <a href="insert" class="wikilink1" title="br-pt:container:list:insert">insert</a>, <a href="push_back" class="wikilink1" title="br-pt:container:list:push_back">push_back</a>, <a href="push_front" class="wikilink1" title="br-pt:container:list:push_front">push_front</a>
</p>

</div>
<!-- EDIT1 SECTION "assign" [3-] --></div>
</body>
</html>
