<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr"
 lang="fr" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>fr:c:other:signal</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:57-0700" />
<meta name="keywords" content="fr,c,other,signal" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/fr/c/other/signal?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=fr:c:other" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/fr/c/other/signal" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/fr/c/other/signal" />
<link rel="canonical" href="signal" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='fr:c:other';var JSINFO = {"id":"fr:c:other:signal","namespace":"fr:c:other"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="signal" id="signal">signal</a></h2>
<div class="level2">

<p>
Syntaxe :
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;csignal&gt;</span>
    <span class="kw4">void</span> <span class="br0">&#40;</span> <span class="sy2">*</span><span class="kw4">signal</span><span class="br0">&#40;</span> <span class="kw4">int</span> <span class="kw4">signal</span>, <span class="kw4">void</span> <span class="br0">&#40;</span><span class="sy2">*</span> func<span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw4">int</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw4">int</span><span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>

La fonction <code>signal()</code> connecte le <code>signal</code> à la fonction <code>func</code> lorsqu&#039;il est
reçu par votre programme. <code>func</code> peut être une fonction de gestion du signal
personnalisée ou l&#039;une des macros suivantes (définies dans le header csignal) :

</p>
<div class="table sectionedit2"><table class="inline">
	<tr class="row0">
		<th class="col0">Macro</th><th class="col1">Description</th>
	</tr>
	<tr class="row1">
		<td class="col0">SIG_DFL</td><td class="col1">gestionnaire de signal par defaut</td>
	</tr>
	<tr class="row2">
		<td class="col0">SIG_IGN</td><td class="col1">le signal est ignoré</td>
	</tr>
</table></div>
<!-- EDIT2 TABLE [379-474] -->
<p>

Voici quelques exemple de signaux auxquels vous pouvez connecter une fonction de gestion
personnalisée :

</p>
<div class="table sectionedit3"><table class="inline">
	<tr class="row0">
		<th class="col0">Signal</th><th class="col1">Description</th>
	</tr>
	<tr class="row1">
		<td class="col0">SIGTERM</td><td class="col1">Signal de terminaison qui peut être intercepté par une fonction personnalisée</td>
	</tr>
	<tr class="row2">
		<td class="col0">SIGINT</td><td class="col1">Signal d&#039;interruption du programme, en général ctrl-c</td>
	</tr>
	<tr class="row3">
		<td class="col0">SIGKILL</td><td class="col1">Arrête l&#039;exécution du programme. Ce signal ne peut être intercepté par une fonction personnalisée</td>
	</tr>
	<tr class="row4">
		<td class="col0">SIGHUP</td><td class="col1">Fin de session (terminal déconnecté)</td>
	</tr>
	<tr class="row5">
		<td class="col0">SIGSEGV</td><td class="col1">Erreur de segmentation</td>
	</tr>
</table></div>
<!-- EDIT3 TABLE [583-953] -->
<p>

La valeur de retour de <code>signal()</code> est l&#039;adresse de la fonction définie avant l&#039;appel à <code>signal()</code>
pour ce signal, ou <code>SIG_ERR</code> s&#039;il y a eu une erreur.
</p>

<p>
L&#039;exemple ci-dessous utilise la fonction <code>signal()</code> pour appeler un nombre de fonction arbitraire
lorsque l&#039;utilisateur interrompt l&#039;exécution du programme. Les fonctions sont répertoriées dans un
<code>vector</code> et une simple fonction de “nettoyage” appelle chaque fonction dans ce <code>vector</code> de fonctions
lorsque le programme est interrompu.
</p>
<pre class="cpp code cpp">  <span class="kw4">void</span> f1<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;appel de f1()...&quot;</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
  <span class="br0">&#125;</span>
&nbsp;
  <span class="kw4">void</span> f2<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;appel de f2()...&quot;</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
  <span class="br0">&#125;</span>
&nbsp;
  <span class="kw4">typedef</span> <span class="kw4">void</span><span class="br0">&#40;</span><span class="sy2">*</span>endFunc<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span><span class="sy4">;</span>
  vector<span class="sy1">&lt;</span>endFunc<span class="sy1">&gt;</span> endFuncs<span class="sy4">;</span>
&nbsp;
  <span class="kw4">void</span> nettoyage<span class="br0">&#40;</span> <span class="kw4">int</span> foo<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">unsigned</span> <span class="kw4">int</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> endFuncs.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> i<span class="sy2">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      endFunc f <span class="sy1">=</span> endFuncs.<span class="me1">at</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="sy4">;</span>
      <span class="br0">&#40;</span><span class="sy2">*</span>f<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="br0">&#125;</span>
    <span class="kw3">exit</span><span class="br0">&#40;</span><span class="sy2">-</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
  <span class="br0">&#125;</span>
&nbsp;
  <span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
    <span class="co1">// connexion de divers signaux à notre fonction de nettoyage</span>
    <span class="kw4">signal</span><span class="br0">&#40;</span> <span class="kw2">SIGTERM</span>, nettoyage<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">signal</span><span class="br0">&#40;</span> <span class="kw2">SIGINT</span>, nettoyage<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">signal</span><span class="br0">&#40;</span> SIGQUIT, nettoyage<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">signal</span><span class="br0">&#40;</span> SIGHUP, nettoyage<span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
    <span class="co1">// ajout des fonctions de nettoyages particulière à la liste des fonctions</span>
    endFuncs.<span class="me1">push_back</span><span class="br0">&#40;</span> f1 <span class="br0">&#41;</span><span class="sy4">;</span>
    endFuncs.<span class="me1">push_back</span><span class="br0">&#40;</span> f2 <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
    <span class="co1">// boucle infinie jusqu'à ce que l'utilisateur interrompe le programme</span>
    <span class="kw1">while</span><span class="br0">&#40;</span> <span class="nu0">1</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
    <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
  <span class="br0">&#125;</span></pre>
<p>
Sujet connexe : <a href="raise" class="wikilink1" title="fr:c:other:raise">raise</a>
</p>

</div>
</div>
</body>
</html>
