<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="cn"
 lang="cn" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>cn:container:vector:assign</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:54-0700" />
<meta name="keywords" content="cn,container,vector,assign" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/cn/container/vector/assign?do=index" title="Sitemap" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=cn:container:vector" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/cn/container/vector/assign" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/cn/container/vector/assign" />
<link rel="canonical" href="assign" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='cn:container:vector';var JSINFO = {"id":"cn:container:vector:assign","namespace":"cn:container:vector"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="assign" id="assign">assign</a></h2>
<div class="level2">

<p>
Syntax:
</p>

<p>
语法：
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;vector&gt;</span>
    <span class="kw4">void</span> assign<span class="br0">&#40;</span> size_type num, <span class="kw4">const</span> T<span class="sy3">&amp;</span> val <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">void</span> assign<span class="br0">&#40;</span> input_iterator start, input_iterator end <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
The assign() function either gives the current vector the values from <code>start</code> to
<code>end</code>, or gives it <code>num</code> copies of <code>val</code>.
</p>

<p>
vector 使用 assign() 方法来给元素赋值，有两种方式：
</p>
<ol>
<li class="level1"><div class="li"> 从一个已知 vector 使用 <code>start</code> 和 <code>end</code> 来给当前 vector 赋值</div>
</li>
<li class="level1"><div class="li"> 使用 <code>num</code> 个 <code>val</code> 拷贝来给当前 vector 赋值。</div>
</li>
</ol>

<p>
This function will destroy the previous contents of the vector.
</p>

<p>
这个方法会破坏 vecotr 先前的内容。
</p>

<p>
For example, the following code uses assign() to put 10 copies of the integer
42 into a vector:
</p>

<p>
例如：下面的代码使用 assign() 把 10 个整数 42 赋给 vecotr：
</p>
<pre class="cpp code cpp">   vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> v<span class="sy4">;</span>
   v.<span class="me1">assign</span><span class="br0">&#40;</span> <span class="nu0">10</span>, <span class="nu0">42</span> <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">size_type</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> v.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> i<span class="sy2">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> v<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span></pre>
<p>

The above code displays the following output:
</p>

<p>
上述代码的运行结果如下：

</p>
<pre class="code"> 42 42 42 42 42 42 42 42 42 42</pre>

<p>

The next example shows how assign() can be used to copy one vector to another:
</p>

<p>
下面这个例子展示怎样使用 assign() 来复制一个 vector 到另一个 vector：
</p>
<pre class="cpp code cpp">   vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> v1<span class="sy4">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">10</span><span class="sy4">;</span> i<span class="sy2">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     v1.<span class="me1">push_back</span><span class="br0">&#40;</span> i <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
&nbsp;
   vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> v2<span class="sy4">;</span>
   v2.<span class="me1">assign</span><span class="br0">&#40;</span> v1.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, v1.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
   <span class="kw1">for</span><span class="br0">&#40;</span> vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">size_type</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> v2.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> i<span class="sy2">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> v2<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span></pre>
<p>
When run, the above code displays the following output:
</p>

<p>
运行上述代码，显示结果如下：

</p>
<pre class="code"> 0 1 2 3 4 5 6 7 8 9</pre>

<p>

Related Topics: <a href="http://www.cppreference.com/wiki/cn/container/vector/insert" class="wikilink2" title="cn:container:vector:insert" rel="nofollow">insert</a>, <a href="push_back" class="wikilink1" title="cn:container:vector:push_back">push_back</a>, <a href="vector_operators" class="wikilink1" title="cn:container:vector:vector_operators">[] operator</a>
</p>

<p>
相关主题：<a href="http://www.cppreference.com/wiki/cn/container/vector/insert" class="wikilink2" title="cn:container:vector:insert" rel="nofollow">insert</a>，<a href="push_back" class="wikilink1" title="cn:container:vector:push_back">push_back</a>，<a href="vector_operators" class="wikilink1" title="cn:container:vector:vector_operators">[] operator</a>

</p>

</div>
</div>
</body>
</html>
