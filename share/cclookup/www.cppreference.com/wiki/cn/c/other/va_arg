<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="cn"
 lang="cn" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>cn:c:other:va_arg</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:49-0700" />
<meta name="keywords" content="cn,c,other,va_arg" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/cn/c/other/va_arg?do=index" title="Sitemap" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=cn:c:other" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/cn/c/other/va_arg" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/cn/c/other/va_arg" />
<link rel="canonical" href="va_arg" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='cn:c:other';var JSINFO = {"id":"cn:c:other:va_arg","namespace":"cn:c:other"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="va_arg" id="va_arg">va_arg</a></h2>
<div class="level2">

<p>
语法：
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;cstdarg&gt;</span>
    type <span class="kw3">va_arg</span><span class="br0">&#40;</span> <span class="kw4">va_list</span> argptr, type <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">void</span> <span class="kw3">va_end</span><span class="br0">&#40;</span> <span class="kw4">va_list</span> argptr <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">void</span> <span class="kw3">va_start</span><span class="br0">&#40;</span> <span class="kw4">va_list</span> argptr, last_parm <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
va_arg() 系列宏用来将变化数目的变量传递给一个函数。

</p>
<ol>
<li class="level1"><div class="li"> 首先，必须调用 va_start() 并传递给它一个有效的va_list和函数位于&#039;…&#039;参数之前的那个强制参数。如果只有一个强制参数，那就是它了。你必须拥有至少一个强制参数。这个参数可以代表任何事；一种用法是使得此参数为整数用来描述传递过来参数的个数。</div>
</li>
<li class="level1"><div class="li"> 然后，调用 va_arg() 并传递给它那个 va_list 和返回参数的类型。va_arg()的返回值是当前的参数。</div>
</li>
<li class="level1"><div class="li"> 根据仍然有多少参数重复调用va_arg()。</div>
</li>
<li class="level1"><div class="li"> 最后，将va_list传递给 va_end() 并因为需要适当的清理工作而调用它。</div>
</li>
</ol>

<p>

例如：
</p>
<pre class="cpp code cpp">    <span class="kw4">int</span> sum<span class="br0">&#40;</span> <span class="kw4">int</span> num, ... <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      <span class="kw4">int</span> answer <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
      <span class="kw4">va_list</span> argptr<span class="sy4">;</span>
&nbsp;
      <span class="kw3">va_start</span><span class="br0">&#40;</span> argptr, num <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
      <span class="kw1">for</span><span class="br0">&#40;</span> <span class="sy4">;</span> num <span class="sy1">&gt;</span> <span class="nu0">0</span><span class="sy4">;</span> num<span class="sy2">--</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
        answer <span class="sy2">+</span><span class="sy1">=</span> <span class="kw3">va_arg</span><span class="br0">&#40;</span> argptr, <span class="kw4">int</span> <span class="br0">&#41;</span><span class="sy4">;</span>
      <span class="br0">&#125;</span>
&nbsp;
      <span class="kw3">va_end</span><span class="br0">&#40;</span> argptr <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
      <span class="kw1">return</span><span class="br0">&#40;</span> answer <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="br0">&#125;</span>
&nbsp;
    <span class="kw4">int</span> main<span class="br0">&#40;</span> <span class="kw4">void</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
      <span class="kw4">int</span> answer <span class="sy1">=</span> sum<span class="br0">&#40;</span> <span class="nu0">4</span>, <span class="nu0">4</span>, <span class="nu0">3</span>, <span class="nu0">2</span>, <span class="nu0">1</span> <span class="br0">&#41;</span><span class="sy4">;</span>
      <span class="kw3">printf</span><span class="br0">&#40;</span> <span class="st0">&quot;The answer is %d<span class="es1">\n</span>&quot;</span>, answer <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
      <span class="kw1">return</span><span class="br0">&#40;</span> <span class="nu0">0</span> <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="br0">&#125;</span></pre>
<p>
这段代码显示10，是 4+3+2+1。
</p>

<p>
这里是另外一个变化参数函数的例子，是一个简单的打印函数：
</p>
<pre class="cpp code cpp">   <span class="kw4">void</span> my_printf<span class="br0">&#40;</span> <span class="kw4">char</span> <span class="sy2">*</span>format, ... <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw4">va_list</span> argptr<span class="sy4">;</span>
&nbsp;
     <span class="kw3">va_start</span><span class="br0">&#40;</span> argptr, format <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
     <span class="kw1">while</span><span class="br0">&#40;</span> <span class="sy2">*</span>format <span class="sy3">!</span><span class="sy1">=</span> <span class="st0">'<span class="es5">\0</span>'</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
       <span class="co1">// string</span>
       <span class="kw1">if</span><span class="br0">&#40;</span> <span class="sy2">*</span>format <span class="sy1">==</span> <span class="st0">'s'</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
         <span class="kw4">char</span><span class="sy2">*</span> s <span class="sy1">=</span> <span class="kw3">va_arg</span><span class="br0">&#40;</span> argptr, <span class="kw4">char</span> <span class="sy2">*</span> <span class="br0">&#41;</span><span class="sy4">;</span>
         <span class="kw3">printf</span><span class="br0">&#40;</span> <span class="st0">&quot;Printing a string: %s<span class="es1">\n</span>&quot;</span>, s <span class="br0">&#41;</span><span class="sy4">;</span>
       <span class="br0">&#125;</span>
       <span class="co1">// character</span>
       <span class="kw1">else</span> <span class="kw1">if</span><span class="br0">&#40;</span> <span class="sy2">*</span>format <span class="sy1">==</span> <span class="st0">'c'</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
         <span class="kw4">char</span> c <span class="sy1">=</span> <span class="br0">&#40;</span><span class="kw4">char</span><span class="br0">&#41;</span> <span class="kw3">va_arg</span><span class="br0">&#40;</span> argptr, <span class="kw4">int</span> <span class="br0">&#41;</span><span class="sy4">;</span>
         <span class="kw3">printf</span><span class="br0">&#40;</span> <span class="st0">&quot;Printing a character: %c<span class="es1">\n</span>&quot;</span>, c <span class="br0">&#41;</span><span class="sy4">;</span>
         <span class="kw1">break</span><span class="sy4">;</span>
       <span class="br0">&#125;</span>
       <span class="co1">// integer</span>
       <span class="kw1">else</span> <span class="kw1">if</span><span class="br0">&#40;</span> <span class="sy2">*</span>format <span class="sy1">==</span> <span class="st0">'d'</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
         <span class="kw4">int</span> d <span class="sy1">=</span> <span class="kw3">va_arg</span><span class="br0">&#40;</span> argptr, <span class="kw4">int</span> <span class="br0">&#41;</span><span class="sy4">;</span>
         <span class="kw3">printf</span><span class="br0">&#40;</span> <span class="st0">&quot;Printing an integer: %d<span class="es1">\n</span>&quot;</span>, d <span class="br0">&#41;</span><span class="sy4">;</span>
       <span class="br0">&#125;</span>
&nbsp;
       format<span class="sy2">++</span><span class="sy4">;</span>
     <span class="br0">&#125;</span>
&nbsp;
     <span class="kw3">va_end</span><span class="br0">&#40;</span> argptr <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
&nbsp;
   <span class="kw4">int</span> main<span class="br0">&#40;</span> <span class="kw4">void</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
     my_printf<span class="br0">&#40;</span> <span class="st0">&quot;sdc&quot;</span>, <span class="st0">&quot;This is a string&quot;</span>, <span class="nu0">29</span>, <span class="st0">'X'</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
     <span class="kw1">return</span><span class="br0">&#40;</span> <span class="nu0">0</span> <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span></pre>
<p>
这段代码运行时显示如下代码：
</p>
<pre class="code">
   Printing a string: This is a string
   Printing an integer: 29
   Printing a character: X</pre>
</div>
<!-- EDIT1 SECTION "va_arg" [3-] --></div>
</body>
</html>
