<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru"
 lang="ru" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ru:algorithm:transform</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:14-0700" />
<meta name="keywords" content="ru,algorithm,transform" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/ru/algorithm/transform?do=index" title="Все страницы" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=ru:algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/ru/algorithm/transform" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/ru/algorithm/transform" />
<link rel="canonical" href="transform" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='ru:algorithm';var JSINFO = {"id":"ru:algorithm:transform","namespace":"ru:algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="transform" id="transform">transform</a></h2>
<div class="level2">

<p>
Синтаксис:
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;algorithm&gt;</span>
    output_iterator transform<span class="br0">&#40;</span> input_iterator start, input_iterator end, output_iterator result, UnaryFunction f <span class="br0">&#41;</span><span class="sy4">;</span>
    output_iterator transform<span class="br0">&#40;</span> input_iterator start1, input_iterator end1, input_iterator2 start2, output_iterator result, BinaryFunction f <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
Алгоритм <code>transform</code> применяет функцию f к диапазону и располагает результат каждого применения в <code>result</code>.
</p>

<p>
Первая версия функции применяет f к каждому элементу диапазона <code>[start,end)</code> и располагает первый вывод функции в <code>result</code>, второй вывод в <code>(result+1)</code>, и т.д.
</p>

<p>
Вторая версия функции  работает аналогично, за исключением того, что ей дается два диапазона и она вызывает бинарную функцию для пары элементов.
</p>

<p>
Например, следующий код использует transform для конвертирования строки типа <a href="../../../string/start" class="wikilink1" title="string:start">string</a> в строку с прописными символами, используя функцию toupper:
</p>
<pre class="cpp code cpp">    string s<span class="br0">&#40;</span><span class="st0">&quot;hello&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    transform<span class="br0">&#40;</span>s.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, s.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, s.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="kw3">toupper</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="co1">// в некоторых компиляторах вам, возможно, придется добавить явное определение типов к &quot;toupper&quot; для разрешения двусмысленности:</span>
<span class="co1">// transform(s.begin(), s.end(), s.begin(), (int (*)(int))toupper);</span>
    <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> s <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span></pre>
<p>
Вывод:
</p>
<pre class="code">
    HELLO</pre>
<p>
Следующий пример показывает, как можно трансформировать <a href="../../../stl/vector/start" class="wikilink1" title="stl:vector:start">вектор</a> с помощью определенной пользователем функции:
</p>
<pre class="cpp code cpp"><span class="kw4">int</span> increment<span class="br0">&#40;</span><span class="kw4">int</span> i<span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="kw1">return</span> <span class="sy2">++</span>i<span class="sy4">;</span> <span class="br0">&#125;</span>
<span class="kw4">int</span> sum<span class="br0">&#40;</span><span class="kw4">int</span> a, <span class="kw4">int</span> b<span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="kw1">return</span> a<span class="sy2">+</span>b<span class="sy4">;</span> <span class="br0">&#125;</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
  vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> v1<span class="sy4">;</span>
  <span class="kw1">for</span><span class="br0">&#40;</span><span class="kw4">int</span> i<span class="sy1">=</span><span class="nu0">1</span><span class="sy4">;</span> i<span class="sy1">&lt;</span><span class="nu0">6</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> v1.<span class="me1">push_back</span> <span class="br0">&#40;</span>i<span class="sy2">*</span>i<span class="br0">&#41;</span><span class="sy4">;</span>                    <span class="co1">// v1: 1 4 9  16 25</span>
&nbsp;
  vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> v2<span class="br0">&#40;</span>v1.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  transform<span class="br0">&#40;</span>v1.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, v1.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, v2.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, increment<span class="br0">&#41;</span><span class="sy4">;</span>       <span class="co1">// v2: 2 5 10 17 26</span>
&nbsp;
  <span class="co1">// добавление элементов v1 и v2, расположение результата в v1</span>
  transform<span class="br0">&#40;</span>v1.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, v1.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, v2.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, v1.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, sum<span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// v1: 3 9 19 33 51</span>
&nbsp;
  <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre>
<p>
Смотрите также: <a href="copy" class="wikilink1" title="ru:algorithm:copy">copy</a>, <a href="fill" class="wikilink1" title="ru:algorithm:fill">fill</a>, <a href="generate" class="wikilink1" title="ru:algorithm:generate">generate</a>
</p>

</div>
</div>
</body>
</html>
