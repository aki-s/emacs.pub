<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru"
 lang="ru" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ru:algorithm:partial_sort_copy</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:13-0700" />
<meta name="keywords" content="ru,algorithm,partial_sort_copy" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/ru/algorithm/partial_sort_copy?do=index" title="Все страницы" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=ru:algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/ru/algorithm/partial_sort_copy" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/ru/algorithm/partial_sort_copy" />
<link rel="canonical" href="partial_sort_copy" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='ru:algorithm';var JSINFO = {"id":"ru:algorithm:partial_sort_copy","namespace":"ru:algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="partial_sort_copy" id="partial_sort_copy">partial_sort_copy</a></h2>
<div class="level2">

<p>
Синтаксис:
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;algorithm&gt;</span>
    random_access_iterator partial_sort_copy<span class="br0">&#40;</span> input_iterator start, input_iterator end, random_access_iterator result_start, random_access_iterator result_end <span class="br0">&#41;</span><span class="sy4">;</span>
    random_access_iterator partial_sort_copy<span class="br0">&#40;</span> input_iterator start, input_iterator end, random_access_iterator result_start, random_access_iterator result_end, StrictWeakOrdering cmp <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
Алгоритм partial_sort_copy() работает аналогично partial_sort(), за исключением того, что вместо частичной сортировки непосредственно внутри диапазона производится копирование диапазона, и сортировка производится уже в копии. Начальный диапазон определен итераторами [start,end), а диапазон для копирования - [result_start,result_end).
</p>

<p>
partial_sort_copy() возвращает итератор на конец скопированного, частично отсортированного диапазона.
</p>

<p>
Пример:
</p>
<pre class="cpp code cpp"><span class="co1">// partial_sort_copy example</span>
<span class="co2">#include &lt;iostream&gt;</span>
<span class="co2">#include &lt;algorithm&gt;</span>
<span class="co2">#include &lt;vector&gt;</span>
<span class="kw2">using</span> <span class="kw2">namespace</span> std<span class="sy4">;</span>
&nbsp;
<span class="kw4">bool</span> myfunction <span class="br0">&#40;</span><span class="kw4">int</span> i,<span class="kw4">int</span> j<span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="kw1">return</span> <span class="br0">&#40;</span>i<span class="sy1">&lt;</span>j<span class="br0">&#41;</span><span class="sy4">;</span> <span class="br0">&#125;</span>
&nbsp;
<span class="kw4">int</span> main <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
  <span class="kw4">int</span> myints<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="br0">&#123;</span><span class="nu0">9</span>,<span class="nu0">8</span>,<span class="nu0">7</span>,<span class="nu0">6</span>,<span class="nu0">5</span>,<span class="nu0">4</span>,<span class="nu0">3</span>,<span class="nu0">2</span>,<span class="nu0">1</span><span class="br0">&#125;</span><span class="sy4">;</span>
  vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> myvector <span class="br0">&#40;</span><span class="nu0">5</span><span class="br0">&#41;</span><span class="sy4">;</span>
  vector<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">iterator</span> it<span class="sy4">;</span>
&nbsp;
  <span class="co1">// используется оператор сравнения по умолчнию (оператор &lt;):</span>
  partial_sort_copy <span class="br0">&#40;</span>myints, myints<span class="sy2">+</span><span class="nu0">9</span>, myvector.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, myvector.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
  <span class="co1">// используется специальная функция как функция сравнения comp</span>
  partial_sort_copy <span class="br0">&#40;</span>myints, myints<span class="sy2">+</span><span class="nu0">9</span>, myvector.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, myvector.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, myfunction<span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
  <span class="co1">// вывод содержимого:</span>
  <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;myvector contains:&quot;</span><span class="sy4">;</span>
  <span class="kw1">for</span> <span class="br0">&#40;</span>it<span class="sy1">=</span>myvector.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> it<span class="sy3">!</span><span class="sy1">=</span>myvector.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> <span class="sy2">++</span>it<span class="br0">&#41;</span>
    <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span> <span class="sy1">&lt;&lt;</span> <span class="sy2">*</span>it<span class="sy4">;</span>
&nbsp;
  <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
&nbsp;
  <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre>
<p>
Вывод:
</p>
<pre class="code">
myvector contains: 1 2 3 4 5</pre>
<p>
Смотрите также: <a href="binary_search" class="wikilink1" title="ru:algorithm:binary_search">binary_search</a>, <a href="http://www.cppreference.com/wiki/ru/algorithm/is_sorted" class="wikilink2" title="ru:algorithm:is_sorted" rel="nofollow">is_sorted</a>, <a href="partial_sort" class="wikilink1" title="ru:algorithm:partial_sort">partial_sort</a>, <a href="sort" class="wikilink1" title="ru:algorithm:sort">sort</a>, <a href="stable_sort" class="wikilink1" title="ru:algorithm:stable_sort">stable_sort</a>
</p>

</div>
<!-- EDIT1 SECTION "partial_sort_copy" [3-] --></div>
</body>
</html>
