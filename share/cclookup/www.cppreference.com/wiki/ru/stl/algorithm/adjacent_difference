<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru"
 lang="ru" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ru:algorithm:adjacent_difference</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:13-0700" />
<meta name="keywords" content="ru,algorithm,adjacent_difference" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/ru/algorithm/adjacent_difference?do=index" title="Все страницы" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=ru:algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/ru/algorithm/adjacent_difference" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/ru/algorithm/adjacent_difference" />
<link rel="canonical" href="adjacent_difference" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='ru:algorithm';var JSINFO = {"id":"ru:algorithm:adjacent_difference","namespace":"ru:algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="adjacent_difference" id="adjacent_difference">adjacent_difference</a></h2>
<div class="level2">

<p>
Синтаксис:
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;numeric&gt;</span>
    output_iterator adjacent_difference<span class="br0">&#40;</span> input_iterator start, input_iterator end, output_iterator result <span class="br0">&#41;</span><span class="sy4">;</span>
    output_iterator adjacent_difference<span class="br0">&#40;</span> input_iterator start, input_iterator end, output_iterator result, BinaryFunction f <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
Функция adjacent_difference() вычисляет разницу между смежными элементами диапазона [start,end), и располагает результат начиная с итератора result. (Конкретнее говоря, элемент с позиции start копируется в позицию result, а затем разница между элементами в позиции start + i и start + (i-1) располагается в позицию result + i).
</p>

<p>
Если задана бинарная функция f, то она используется вместо оператора -, чтобы вычислить разность.
adjacent_difference() работает за <a href="http://www.cppreference.com/wiki/ru/complexity" class="wikilink2" title="ru:complexity" rel="nofollow">линейное время</a>.
</p>

<p>
Следующий пример показывает разность между смежными элементами вектора:
</p>
<pre class="cpp code cpp"> <span class="co2">#include &lt;algorithm&gt;</span>
 <span class="co2">#include &lt;iostream&gt;</span>
 <span class="co2">#include &lt;iterator&gt;</span>
 <span class="co2">#include &lt;numeric&gt;</span>
 <span class="co2">#include &lt;vector&gt;</span>
&nbsp;
 <span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span>
 <span class="br0">&#123;</span>
   std<span class="sy4">::</span><span class="me2">vector</span><span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> v<span class="sy4">;</span>
   <span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">int</span> i <span class="sy1">=</span> <span class="nu0">3</span><span class="sy4">;</span> i <span class="sy1">&lt;=</span> <span class="nu0">10</span><span class="sy4">;</span> <span class="sy2">++</span>i<span class="br0">&#41;</span>
     v.<span class="me1">push_back</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
   <span class="co1">// display elements of v</span>
   std<span class="sy4">::</span><span class="me2">copy</span><span class="br0">&#40;</span>v.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, v.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, std<span class="sy4">::</span><span class="me2">ostream_iterator</span><span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="br0">&#40;</span>std<span class="sy4">::</span><span class="kw3">cout</span>, <span class="st0">&quot; &quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
   std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> std<span class="sy4">::</span><span class="me2">endl</span><span class="sy4">;</span>
&nbsp;
   <span class="co1">// display all differences between elements</span>
   std<span class="sy4">::</span><span class="me2">adjacent_difference</span><span class="br0">&#40;</span>v.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, v.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, std<span class="sy4">::</span><span class="me2">ostream_iterator</span><span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="br0">&#40;</span>std<span class="sy4">::</span><span class="kw3">cout</span>, <span class="st0">&quot; &quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
   <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
 <span class="br0">&#125;</span></pre>
<p>
Этот код дает следующий вывод:
</p>
<pre class="cpp code cpp"> <span class="nu0">3</span> <span class="nu0">4</span> <span class="nu0">5</span> <span class="nu0">6</span> <span class="nu0">7</span> <span class="nu0">8</span> <span class="nu0">9</span> <span class="nu0">10</span>
 <span class="nu0">3</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span></pre>
<p>
Смотрите также: <a href="accumulate" class="wikilink1" title="ru:algorithm:accumulate">accumulate</a>, <a href="count" class="wikilink1" title="ru:algorithm:count">count</a>, <a href="inner_product" class="wikilink1" title="ru:algorithm:inner_product">inner_product</a>, <a href="partial_sum" class="wikilink1" title="ru:algorithm:partial_sum">partial_sum</a>
</p>

</div>
<!-- EDIT1 SECTION "adjacent_difference" [3-] --></div>
</body>
</html>
