<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru"
 lang="ru" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ru:container:deque:deque_constructors</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:14-0700" />
<meta name="keywords" content="ru,container,deque,deque_constructors" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/ru/container/deque/deque_constructors?do=index" title="Все страницы" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=ru:container:deque" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/ru/container/deque/deque_constructors" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/ru/container/deque/deque_constructors" />
<link rel="canonical" href="deque_constructors" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='ru:container:deque';var JSINFO = {"id":"ru:container:deque:deque_constructors","namespace":"ru:container:deque"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="конструкторы_двусторонней_очереди" id="конструкторы_двусторонней_очереди">Конструкторы двусторонней очереди</a></h2>
<div class="level2">

<p>
Синтаксис:
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;deque&gt;</span>
    deque<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    deque<span class="br0">&#40;</span> <span class="kw4">const</span> deque<span class="sy3">&amp;</span> c <span class="br0">&#41;</span><span class="sy4">;</span>
    deque<span class="br0">&#40;</span> size_type num, <span class="kw4">const</span> T<span class="sy3">&amp;</span> val <span class="sy1">=</span> T<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
    deque<span class="br0">&#40;</span> input_iterator start, input_iterator end <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
Конструктор по умолчанию не принимает аргументов, он создает новый экземпляр
двусторонней очереди.
</p>

<p>

Второй конструктор - конструктор копирования по умолчанию, использующийся для
создания новой двусторонней очереди как копии данной двусторонней очереди <code>c</code>.
</p>

<p>
Третий конструктор создает двустороннюю очередь с местом под <code>num</code> объектов.
Если val объявлена, то каждый из этих объектов будет инициализирован ее значением.
Например, следующий код создает двустороннюю очередь, состоящую из пяти копий
целого числа 42:
</p>
<pre class="cpp code cpp">   deque<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> dq<span class="br0">&#40;</span> <span class="nu0">5</span>, <span class="nu0">42</span> <span class="br0">&#41;</span><span class="sy4">;</span></pre>
<p>
Последний конструктор создает двустороннюю очередь, состоящe. из элементов между <code>start</code>
и <code>end</code>. Пример:
</p>
<pre class="cpp code cpp">   <span class="co1">// создаем двустороннюю очередь из случайных чисел</span>
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;первоначальная двусторонняя очередь: &quot;</span><span class="sy4">;</span>
   deque<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> dq<span class="sy4">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">10</span><span class="sy4">;</span> i<span class="sy2">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw4">int</span> num <span class="sy1">=</span> <span class="kw2">static_cast</span><span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="kw3">rand</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy2">%</span> <span class="nu0">10</span><span class="br0">&#41;</span><span class="sy4">;</span>
     <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> num <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy4">;</span>
     dq.<span class="me1">push_back</span><span class="br0">&#40;</span> num <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
&nbsp;
   <span class="co1">// находим первый четный элемент dq</span>
   deque<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">iterator</span> iter1 <span class="sy1">=</span> dq.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="kw1">while</span><span class="br0">&#40;</span> iter1 <span class="sy3">!</span><span class="sy1">=</span> dq.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy3">&amp;&amp;</span> <span class="sy2">*</span>iter1 <span class="sy2">%</span> <span class="nu0">2</span> <span class="sy3">!</span><span class="sy1">=</span> <span class="nu0">0</span> <span class="br0">&#41;</span> <span class="sy2">++</span>iter1<span class="sy4">;</span>
&nbsp;
   <span class="co1">// находим последний четный элемент dq</span>
   deque<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">iterator</span> iter2 <span class="sy1">=</span> dq.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="kw1">do</span> <span class="br0">&#123;</span>
     <span class="sy2">--</span>iter2<span class="sy4">;</span>
   <span class="br0">&#125;</span> <span class="kw1">while</span><span class="br0">&#40;</span> iter2 <span class="sy3">!</span><span class="sy1">=</span> dq.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy3">&amp;&amp;</span> <span class="sy2">*</span>iter2 <span class="sy2">%</span> <span class="nu0">2</span> <span class="sy3">!</span><span class="sy1">=</span> <span class="nu0">0</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;первый четный элемент: &quot;</span> <span class="sy1">&lt;&lt;</span> <span class="sy2">*</span>iter1 <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;, последний четный элемент: &quot;</span> <span class="sy1">&lt;&lt;</span> <span class="sy2">*</span>iter2 <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
&nbsp;
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;новая двусторонняя очередь: &quot;</span><span class="sy4">;</span>
   deque<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> dq2<span class="br0">&#40;</span> iter1, iter2 <span class="br0">&#41;</span><span class="sy4">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">size_t</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> dq2.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> i<span class="sy2">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> dq2<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy4">;</span>
   <span class="br0">&#125;</span>
   <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span></pre>
<p>
После запуска код выводит:
</p>
<pre class="code">
   первоначальная двусторонняя очередь: 1 9 7 9 2 7 2 1 9 8
   первый четный элемент: 2, последний четный элемент: 8
   новая двусторонняя очередь: 2 7 2 1 9</pre>
<p>
Кроме контейнеров и итераторов, STL также работает с указателями и массивами. Пример:
</p>
<pre class="cpp code cpp">  <span class="co1">// создаем двустороннюю очередь из массива</span>
  <span class="kw4">const</span> <span class="kw4">int</span> ARR_SIZE <span class="sy1">=</span> <span class="nu0">4</span><span class="sy4">;</span>
  <span class="kw4">int</span> vals<span class="br0">&#91;</span>ARR_SIZE<span class="br0">&#93;</span> <span class="sy1">=</span> <span class="br0">&#123;</span> <span class="nu0">13</span>, <span class="nu0">26</span>, <span class="nu0">5</span>, <span class="nu0">979</span> <span class="br0">&#125;</span><span class="sy4">;</span>
  deque<span class="sy1">&lt;</span><span class="kw4">int</span><span class="sy1">&gt;</span> dq<span class="br0">&#40;</span> vals, vals <span class="sy2">+</span> <span class="kw3">sizeof</span><span class="br0">&#40;</span>vals<span class="br0">&#41;</span><span class="sy2">/</span><span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="kw4">int</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
  <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;dq is: &quot;</span><span class="sy4">;</span>
  <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">size_t</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> dq.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> <span class="sy2">++</span>i <span class="br0">&#41;</span> <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> dq<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy4">;</span>
  <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">'<span class="es1">\n</span>'</span><span class="sy4">;</span></pre>
<p>

Все конструкторы выполняются за <a href="http://www.cppreference.com/wiki/ru/complexity" class="wikilink2" title="ru:complexity" rel="nofollow">линейное время</a>, кроме первого, который выполняется за
<a href="http://www.cppreference.com/wiki/ru/complexity" class="wikilink2" title="ru:complexity" rel="nofollow">константное время</a>.
</p>

</div>
<!-- EDIT1 SECTION "Конструкторы двусторонней очереди" [3-] --></div>
</body>
</html>
