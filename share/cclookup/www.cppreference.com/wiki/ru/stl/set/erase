<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru"
 lang="ru" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ru:container:set:erase</title>
<meta name="generator" content="DokuWiki" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-10-28T18:17:15-0700" />
<meta name="keywords" content="ru,container,set,erase" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/ru/container/set/erase?do=index" title="Все страницы" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=ru:container:set" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/ru/container/set/erase" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/ru/container/set/erase" />
<link rel="canonical" href="erase" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1289693594" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1289693594" />
<script type="text/javascript" ><!--//--><![CDATA[//><!--
var NS='ru:container:set';var JSINFO = {"id":"ru:container:set:erase","namespace":"ru:container:set"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1289693594" ></script>
</head>
<body>
<div class="dokuwiki export">

<h2 class="sectionedit1"><a name="erase" id="erase">erase</a></h2>
<div class="level2">

<p>
Синтаксис:
</p>
<pre class="cpp code cpp">    <span class="co2">#include &lt;set&gt;</span>
    <span class="kw4">void</span> erase<span class="br0">&#40;</span> iterator pos <span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw4">void</span> erase<span class="br0">&#40;</span> iterator start, iterator end <span class="br0">&#41;</span><span class="sy4">;</span>
    size_type erase<span class="br0">&#40;</span> <span class="kw4">const</span> key_type<span class="sy3">&amp;</span> key <span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// возвращает количество удаленных элементов</span></pre>
<p>
Функция erase() удаляет элемент в позиции pos, удаляет элементы между start и end
или удаляет все элементы, имеющие значение, равное key.
</p>

<p>
<strong>Нужно обращаться аккуратно со всеми контейнерами при вставке или удалении элементов, так как итераторы могут стать недействительными.</strong>
</p>

<p>
В частности, set::erase() делает недействительными только итераторы (и указатели), ссылающиеся на удаляемый элемент.
</p>

<p>
В примере удаляются некоторые элементы в зависимости от условия (удалятся буквы B и D):

</p>
<pre class="cpp code cpp"><span class="co2">#include &lt;iostream&gt;</span>
<span class="co2">#include &lt;set&gt;</span>
<span class="co2">#include &lt;iterator&gt;</span>
&nbsp;
<span class="kw2">using</span> <span class="kw2">namespace</span> std<span class="sy4">;</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="co1">// Создаем множество, вставляем в него первые десять букв алфавита</span>
    set<span class="sy1">&lt;</span><span class="kw4">char</span><span class="sy1">&gt;</span> alphas<span class="sy4">;</span>
    <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i<span class="sy1">=</span><span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">10</span><span class="sy4">;</span> i<span class="sy2">++</span> <span class="br0">&#41;</span>
      alphas.<span class="me1">insert</span><span class="br0">&#40;</span> alphas.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, i <span class="sy2">+</span> <span class="nu0">65</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
    <span class="co1">// выводим первоначальное содержимое</span>
    copy<span class="br0">&#40;</span>alphas.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, alphas.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, ostream_iterator<span class="sy1">&lt;</span><span class="kw4">char</span><span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="kw3">cout</span>, <span class="st0">&quot;&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
&nbsp;
    set<span class="sy1">&lt;</span><span class="kw4">char</span><span class="sy1">&gt;</span><span class="sy4">::</span><span class="me2">iterator</span> iter <span class="sy1">=</span> alphas.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw1">while</span><span class="br0">&#40;</span> iter <span class="sy3">!</span><span class="sy1">=</span> alphas.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
      <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy2">*</span>iter <span class="sy1">==</span> <span class="st0">'B'</span> <span class="sy3">||</span> <span class="sy2">*</span>iter <span class="sy1">==</span> <span class="st0">'D'</span><span class="br0">&#41;</span>
        <span class="co1">// В erase() отправляется копия iter, вызывается ++ перед вызовом erase().</span>
        <span class="co1">// Таким образом, итератор iter остается действительным</span>
        alphas.<span class="me1">erase</span><span class="br0">&#40;</span> iter<span class="sy2">++</span> <span class="br0">&#41;</span><span class="sy4">;</span>
      <span class="kw1">else</span>
        <span class="sy2">++</span>iter<span class="sy4">;</span>
    <span class="br0">&#125;</span>
&nbsp;
    <span class="co1">// Выводим измененное содержимое</span>
    copy<span class="br0">&#40;</span>alphas.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, alphas.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, ostream_iterator<span class="sy1">&lt;</span><span class="kw4">char</span><span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="kw3">cout</span>, <span class="st0">&quot;&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> endl<span class="sy4">;</span>
<span class="br0">&#125;</span></pre>
<p>
После запуска код выводит:

</p>
<pre class="code">
ABCDEFGHIJ
ACEFGHIJ</pre>
<p>
Смотри также: <a href="clear" class="wikilink1" title="ru:container:set:clear">clear</a>
</p>

</div>
<!-- EDIT1 SECTION "erase" [3-] --></div>
</body>
</html>
