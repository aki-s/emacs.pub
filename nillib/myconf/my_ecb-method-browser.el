(when nil
  ;; @dev
  (set-custom-variables
   '(ecb-add-path-for-not-matching-files '(t . nil))
   '(ecb-methods-buffer-name " *ECB Methods*")
   '(ecb-auto-expand-tag-tree 'expand-spec)
   '(ecb-auto-expand-tag-tree-collapse-other nil)
   '(ecb-expand-methods-switch-off-auto-expand t)
   '(ecb-auto-update-methods-after-save nil)
   '(ecb-font-lock-tags t)
   '(ecb-tag-jump-sets-mark t)
   '(ecb-tag-display-function '((default . ecb-format-tag-uml-prototype)))
   '(ecb-type-tag-display nil)
   '(ecb-type-tag-expansion)
   '(ecb-find-external-tag-functions)
   '(ecb-display-image-icons-for-semantic-tags t)
   '(ecb-post-process-semantic-taglist)
   '(ecb-default-tag-filter nil)
   '(ecb-show-only-positioned-tags nil)
   '(ecb-force-reparse-when-semantic-idle-scheduler-off nil)
   '(ecb-show-tags)
   '(ecb-methods-separate-prototypes t)
   '(ecb-methods-filter-replace-existing 'never)
   '(ecb-methods-nodes-expand-spec '(type variable function section));; imcomplete
   '(ecb-methods-nodes-collapse-spec 'all)
   '(ecb-methods-show-node-info '(if-too-long . name+type))
   '(ecb-exclude-parents-regexps nil)
   '(ecb-highlight-tag-with-point 'highlight-scroll)
   '(ecb-highlight-tag-with-point-delay 0.25)
   '(ecb-tag-visit-post-actions '((default . (ecb-tag-visit-smart-tag-start)) ));; imcomplete
   '(ecb-methods-menu-user-extension nil)
   '(ecb-methods-menu-user-extension-function 'ignore)
   '(ecb-methods-menu-sorter nil)
   '(ecb-disable-semantic-threshold-alist nil)
   '(ecb-methods-buffer-after-create-hook nil)
   '(ecb-process-non-semantic-files (if (locate-library "speedbar")));; imcomplete;
   '(ecb-non-semantic-parsing-function nil)
   '(ecb-non-semantic-methods-initial-expand nil)
   '(ecb-auto-save-before-etags-methods-rebuild t)
   '(ecb-non-semantic-exclude-modes '(sh-mode fundamental-mode text-mode))
   '(ecb-rebuild-non-semantic-methods-before-hook nil    )
   )

  (provide 'my_ecb-method-browser)

  )
